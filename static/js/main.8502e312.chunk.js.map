{"version":3,"sources":["lib/kozoom-3d-simulator/src/CaromSimulator/viewSelector.js","lib/kozoom-3d-simulator/src/CaromSimulator/simulatorEngine.js","lib/kozoom-3d-simulator/src/CaromSimulator/controller/slider.js","lib/kozoom-3d-simulator/src/CaromSimulator/controller/index.js","lib/kozoom-3d-simulator/src/CaromSimulator/index.js","App.js","serviceWorker.js","index.js"],"names":["ViewSelector","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","viewSelectorItemClicked","bind","assertThisInitialized","item","_self","str2Dclass","str3Dclass","currentView","react_default","a","createElement","className","onClick","Component","SimulatorEngine","meshPicked","onSceneMount","configCueBalls","loadModels","configCameras","changeView","scene","undefined","canvas","arcCam","topCam","table","bat","cueBallWhite","cueBallYellow","targetBall","grids","mesh","console","log","BABYLON","Zero","attachControl","upperBetaLimit","wheelPrecision","upperRadiusLimit","lowerRadiusLimit","Math","PI","lowerBetaLimit","upperAlphaLimit","lowerAlphaLimit","modelStorePath","CreateSphere","position","y","x","random","z","matCueBallWhite","diffuseTexture","material","matCueBallYellow","matTargetBall","diffuseColor","color","i","myPoints","push","CreateLines","points","colors","visible","length","visibility","ImportMesh","newMeshes","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","obj","value","name","bumpTexture","err","return","rotate","LOCAL","e","clearColor","configGrids","Up","getEngine","runRenderLoop","render","view","activeCamera","detachControl","react_babylonjs_es5","canvasId","onMeshPicked","React","InputSlider","componentWillReceiveProps","setState","updateValue","onChangeValue","evt","target","onMinusPressed","currentValue","state","_this$props","min","step","onPlusPressed","_this$props2","max","_this$props3","containerClass","label","unitDom","style","display","index_es","icon","faMinus","flex","textAlign","faPlus","type","onChange","ControllerCollection","showGrid","btnGridClass","faTh","onToggleShowGrid","faCrosshairs","faVolumeMute","slider_InputSlider","faBackward","faStop","faPlay","faForward","CaromSimulator","simulator","createRef","current","toggleGrids","viewSelector_ViewSelector","simulatorEngine","ref","controller_ControllerCollection","App","src_CaromSimulator","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8502e312.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './styles.css';\r\nexport default class ViewSelector extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.viewSelectorItemClicked = this.viewSelectorItemClicked.bind(this);\r\n    }\r\n\r\n    viewSelectorItemClicked (item) {\r\n        if(typeof this.props.viewSelectorItemClicked === 'function'){\r\n            this.props.viewSelectorItemClicked(item);\r\n        }\r\n    }\r\n\r\n    render () {\r\n        let _self = this;\r\n        let str2Dclass = \"view-selector-item\";\r\n        let str3Dclass = \"view-selector-item\";\r\n\r\n        if (this.props.currentView === '2d') {\r\n            str2Dclass += \" active\";\r\n        } else {\r\n            str3Dclass += \" active\";\r\n        }\r\n        return (\r\n            <div className=\"view-selector\">\r\n                <span\r\n                    className={str2Dclass}\r\n                    onClick={function () { _self.viewSelectorItemClicked('2d') }}\r\n                >2D</span>\r\n                <span\r\n                    className={str3Dclass}\r\n                    onClick={function () { _self.viewSelectorItemClicked('3d') }}\r\n                >3D</span>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nimport { Engine, Scene } from 'react-babylonjs';\r\nimport * as BABYLON from 'babylonjs';\r\n\r\nimport './styles.css';\r\n\r\nconst ballRadius = 10;\r\n\r\nclass SimulatorEngine extends React.Component {\r\n    constructor () {\r\n        super();\r\n        this.meshPicked = this.meshPicked.bind(this);\r\n        this.onSceneMount = this.onSceneMount.bind(this);\r\n        this.configCueBalls = this.configCueBalls.bind(this);\r\n        this.loadModels = this.loadModels.bind(this);\r\n        this.configCameras = this.configCameras.bind(this);\r\n\r\n        this.changeView = this.changeView.bind(this);\r\n\r\n        this.scene = undefined;\r\n        this.canvas = undefined;\r\n\r\n        this.arcCam = undefined;\r\n        this.topCam = undefined;\r\n\r\n        this.table = undefined;\r\n        this.bat = undefined;\r\n\r\n        this.cueBallWhite = undefined;\r\n        this.cueBallYellow = undefined;\r\n        this.targetBall = undefined;\r\n\r\n        this.grids = [];\r\n    }\r\n\r\n    meshPicked ( mesh ) {\r\n        console.log('mesh picked', mesh);\r\n    }\r\n\r\n    configCameras () {\r\n        const _self = this;\r\n        _self.arcCam = new BABYLON.ArcRotateCamera(\"Camera-Arc\", 4.44, 1.05, 300, BABYLON.Vector3.Zero(), _self.scene);\r\n        _self.arcCam.attachControl(_self.canvas);\r\n        _self.arcCam.upperBetaLimit = 1.5;\r\n        _self.arcCam.wheelPrecision = 0.2;\r\n        \r\n        _self.arcCam.upperRadiusLimit = 500;\r\n        _self.arcCam.lowerRadiusLimit = 200;\r\n        \r\n        _self.topCam = new BABYLON.ArcRotateCamera(\"Camera-Top\", -Math.PI/2, 0, 330, BABYLON.Vector3.Zero(), _self.scene);\r\n        // _self.topCam.mode = BABYLON.Camera.ORTHOGRAPHIC_CAMERA;\r\n        // _self.topCam.orthoTop = 120;\r\n        // _self.topCam.orthoBottom = -120;\r\n        // _self.topCam.orthoLeft = -240;\r\n        // _self.topCam.orthoRight = 240;\r\n\r\n        _self.topCam.upperBetaLimit = 0;\r\n        _self.topCam.lowerBetaLimit = 0;\r\n\r\n        _self.topCam.upperAlphaLimit = -Math.PI/2;\r\n        _self.topCam.lowerAlphaLimit = -Math.PI/2;\r\n\r\n        _self.topCam.upperRadiusLimit = 330;\r\n        _self.topCam.lowerRadiusLimit = 330;\r\n    }\r\n\r\n    configCueBalls () {\r\n        const _self = this;\r\n        const { modelStorePath } = this.props;\r\n\r\n        _self.cueBallWhite = BABYLON.Mesh.CreateSphere(\"sphere1\", 16, ballRadius, _self.scene);\r\n        _self.cueBallWhite.position.y = ballRadius;\r\n        _self.cueBallWhite.position.x = (Math.random() - 0.5) * 400;\r\n        _self.cueBallWhite.position.z = (Math.random() - 0.5) * 200;\r\n\r\n        var matCueBallWhite = new BABYLON.StandardMaterial(\"redMat\", _self.scene);\r\n        matCueBallWhite.diffuseTexture = new BABYLON.Texture(modelStorePath + \"cueball-white.jpg\", _self.scene);\r\n        _self.cueBallWhite.material = matCueBallWhite;\r\n\r\n        _self.cueBallYellow = BABYLON.Mesh.CreateSphere(\"sphere2\", 16, ballRadius, _self.scene);\r\n        _self.cueBallYellow.position.y = ballRadius;\r\n        _self.cueBallYellow.position.x = (Math.random() - 0.5) * 400;\r\n        _self.cueBallYellow.position.z = (Math.random() - 0.5) * 200;\r\n\r\n        var matCueBallYellow = new BABYLON.StandardMaterial(\"redMat\", _self.scene);\r\n        matCueBallYellow.diffuseTexture = new BABYLON.Texture(modelStorePath + \"cueball-yellow.jpg\", _self.scene);\r\n        _self.cueBallYellow.material = matCueBallYellow;\r\n\r\n        _self.targetBall = BABYLON.Mesh.CreateSphere(\"sphere3\", 16, ballRadius, _self.scene);\r\n        _self.targetBall.position.y = ballRadius;\r\n        _self.targetBall.position.x = (Math.random() - 0.5) * 400;\r\n        _self.targetBall.position.z = (Math.random() - 0.5) * 200;\r\n\r\n        var matTargetBall = new BABYLON.StandardMaterial(\"redMat\", _self.scene);\r\n        matTargetBall.diffuseColor = new BABYLON.Color3(0.9, 0.1, 0.1);\r\n        _self.targetBall.material = matTargetBall;\r\n    }\r\n\r\n    configGrids () {\r\n        const _self = this;\r\n        const grayRate = 0.7;\r\n        const color = [new BABYLON.Color4(grayRate,grayRate,grayRate,1), new BABYLON.Color4(grayRate,grayRate,grayRate,1)];\r\n        for (var i = 0; i < 7; i++) {\r\n            let myPoints = [\r\n                new BABYLON.Vector3(-150 + i * 50, 5.5, -100),\r\n                new BABYLON.Vector3(-150 + i * 50, 5.5, 100)\r\n            ];\r\n            _self.grids.push(BABYLON.MeshBuilder.CreateLines(\"lines\", {points: myPoints, colors: color}, _self.scene));\r\n        }\r\n        for (i = 0; i < 3; i++) {\r\n            let myPoints = [\r\n                new BABYLON.Vector3(-200, 5.5, -50 + i * 50),\r\n                new BABYLON.Vector3(200, 5.5, -50 + i * 50)\r\n            ];\r\n            _self.grids.push(BABYLON.MeshBuilder.CreateLines(\"lines\", {points: myPoints, colors: color}, _self.scene));\r\n        }\r\n    }\r\n\r\n    toggleGrids (visible) {\r\n        const {grids} = this;\r\n        for (var i = 0; i < grids.length; i++) {\r\n            grids[i].visibility = visible;\r\n        }\r\n    }\r\n    loadModels () {\r\n        const _self = this;\r\n        const { modelStorePath } = this.props;\r\n\r\n        BABYLON.SceneLoader.ImportMesh(\"\", modelStorePath, \"table.babylon\", _self.scene, function (newMeshes) {\r\n            _self.table = newMeshes;\r\n            for(var obj of newMeshes){\r\n                if(obj.name === 'carpet'){\r\n                    // assign bump\r\n                    obj.material.bumpTexture = new BABYLON.Texture(modelStorePath+'carpet-bump.png', _self.scene);\r\n                    // end assign bump\r\n                }\r\n            }\r\n        });\r\n\r\n        BABYLON.SceneLoader.ImportMesh(\"\", modelStorePath, \"bat.babylon\", _self.scene, function (newMeshes) {\r\n            _self.bat = newMeshes[0];\r\n            _self.bat.position.y = 10;\r\n            _self.bat.position.z = 20;\r\n            _self.bat.rotate(new BABYLON.Vector3(-2, 0, -60), Math.PI / 8, BABYLON.Space.LOCAL);\r\n            \r\n        });\r\n    }\r\n\r\n    onSceneMount ( e ) {\r\n        const { canvas, scene } = e;\r\n        const _self = this;\r\n\r\n        _self.scene = scene;\r\n        _self.canvas = canvas;\r\n\r\n        scene.clearColor = new BABYLON.Color3(0.05, 0.05, 0.05);\r\n\r\n        this.configCameras();\r\n        this.configCueBalls();\r\n        this.loadModels();\r\n        this.configGrids();\r\n\r\n        new BABYLON.HemisphericLight('light', BABYLON.Vector3.Up(), scene);\r\n\r\n        // config shadow\r\n        // end config shadow\r\n        scene.getEngine().runRenderLoop(() => {\r\n            if (scene) {\r\n                scene.render();\r\n            }\r\n        });\r\n    }\r\n\r\n    changeView (view) {\r\n        const _self = this;\r\n        \r\n        if (view === '2d') {\r\n            _self.scene.activeCamera = _self.topCam;\r\n            _self.arcCam.detachControl(_self.canvas);\r\n            _self.topCam.attachControl(_self.canvas);\r\n        } else {\r\n            _self.scene.activeCamera = _self.arcCam;\r\n            _self.arcCam.attachControl(_self.canvas);\r\n            _self.topCam.detachControl(_self.canvas);\r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <Engine canvasId=\"carom-simulator-canvas\">\r\n                <Scene\r\n                    onMeshPicked={this.meshPicked}\r\n                    onSceneMount={this.onSceneMount}\r\n                />\r\n            </Engine>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SimulatorEngine;","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faMinus, faPlus } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport './slider.css';\r\n\r\nexport default class InputSlider extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            value: this.props.value?this.props.value:0\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps = (props) => {\r\n        const {value} = props;\r\n        this.setState({value:value});\r\n    }\r\n\r\n    updateValue = (value) => {\r\n        this.setState({value:value})\r\n    }\r\n    onChangeValue = (evt) => {\r\n        const value = evt.target.value;\r\n        this.updateValue(value);\r\n    }\r\n\r\n    onMinusPressed = () => {\r\n        var currentValue = this.state.value;\r\n        let { min, step } = this.props;\r\n        if (step === undefined) step = 0.1;\r\n        step *= 10;\r\n        currentValue = (currentValue*10 - step)/10;\r\n        if (currentValue <  min) currentValue = min;\r\n        this.updateValue(currentValue);\r\n    }\r\n\r\n    onPlusPressed = () => {\r\n        var currentValue = this.state.value;\r\n        let { max, step } = this.props;\r\n        if (step === undefined) step = 0.1;\r\n        step *= 10;\r\n        currentValue = (currentValue*10 + step)/10;\r\n        if (currentValue > max) currentValue = max;\r\n        this.updateValue(currentValue);\r\n    }\r\n\r\n    render () {\r\n        const {\r\n            value,\r\n        } = this.state;\r\n\r\n        let {\r\n            containerClass,\r\n            label,\r\n            min,\r\n            max,\r\n            unitDom,\r\n            step\r\n        } = this.props\r\n        if (step === undefined) step = 0.1;\r\n        return (\r\n            <div className={containerClass}>\r\n                <div style={{display:'flex'}}>\r\n                    <FontAwesomeIcon\r\n                        icon={faMinus}\r\n                        className=\"btn-change-value\"\r\n                        onClick={this.onMinusPressed}\r\n                    />\r\n                    <span style={{flex:1, textAlign:'center'}}>\r\n                        {label}\r\n                        <span> : {value}{unitDom}</span>\r\n                    </span>\r\n                    <FontAwesomeIcon\r\n                        icon={faPlus}\r\n                        className=\"btn-change-value\"\r\n                        onClick={this.onPlusPressed}\r\n                    />\r\n                </div>\r\n                <input\r\n                    type=\"range\"\r\n                    min={min}\r\n                    max={max}\r\n                    value={value}\r\n                    className=\"slider\"\r\n                    step={step}\r\n                    onChange={this.onChangeValue}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n    faTh,\r\n    faCrosshairs,\r\n    faVolumeMute,\r\n    faBackward,\r\n    faForward,\r\n    faStop,\r\n    faPlay\r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport InputSlider from './slider';\r\nimport './style.css';\r\n\r\nexport default class ControllerCollection extends React.Component {\r\n    render () {\r\n        const {showGrid} = this.props;\r\n        var btnGridClass = \"toggle-btn\";\r\n        var btnShowPathClass = \"toggle-btn\";\r\n        var btnMuteClass = \"toggle-btn\";\r\n\r\n        if (showGrid === true) btnGridClass += \" active\";\r\n        return (\r\n            <div>\r\n                <div className=\"common-controller-container\">\r\n                    <FontAwesomeIcon\r\n                        className={btnGridClass}\r\n                        icon={faTh}\r\n                        onClick={() => {this.props.onToggleShowGrid(!showGrid)}}\r\n                    />\r\n\r\n                    <FontAwesomeIcon\r\n                        className={btnShowPathClass}\r\n                        icon={faCrosshairs}\r\n                    />\r\n\r\n                    <FontAwesomeIcon\r\n                        className={btnMuteClass}\r\n                        icon={faVolumeMute}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <InputSlider\r\n                        label=\"Cue Line\"\r\n                        containerClass=\"slider-container\"\r\n                        min={-180}\r\n                        max={180}\r\n                        value={-30}\r\n                        unitDom={<sup>o</sup>}\r\n                    />\r\n                    <InputSlider\r\n                        label=\"Cue Angle\"\r\n                        containerClass=\"slider-container\"\r\n                        min={2}\r\n                        max={89}\r\n                        value={-30}\r\n                        unitDom={<sup>o</sup>}\r\n                    />\r\n                    <InputSlider\r\n                        label=\"Side English\"\r\n                        containerClass=\"slider-container\"\r\n                        min={-10.1}\r\n                        max={10.1}\r\n                        value={-8.7}\r\n                        unitDom={<span>mm</span>}\r\n                    />\r\n                    <InputSlider\r\n                        label=\"Top Spin\"\r\n                        containerClass=\"slider-container\"\r\n                        min={-11.1}\r\n                        max={11.1}\r\n                        value={7.5}\r\n                        unitDom={<span>mm</span>}\r\n                    />\r\n                    <InputSlider\r\n                        label=\"Speed\"\r\n                        containerClass=\"slider-container\"\r\n                        min={0}\r\n                        max={450}\r\n                        value={230}\r\n                        step={1}\r\n                        unitDom={<span>cm/s</span>}\r\n                    />\r\n                </div>\r\n                <div className=\"play-controller-container\">\r\n                    <FontAwesomeIcon\r\n                        className=\"play-controller\"\r\n                        icon={faBackward}\r\n                    />\r\n                    <FontAwesomeIcon\r\n                        className=\"play-controller\"\r\n                        icon={faStop}\r\n                    />\r\n                    <FontAwesomeIcon\r\n                        className=\"play-controller\"\r\n                        icon={faPlay}\r\n                    />\r\n                    <FontAwesomeIcon\r\n                        className=\"play-controller\"\r\n                        icon={faForward}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nimport ViewSelector from './viewSelector';\r\nimport SimulatorEngine from './simulatorEngine';\r\nimport ControllerCollection from './controller';\r\n\r\nimport './styles.css';\r\n\r\nclass CaromSimulator extends React.Component {\r\n    constructor () {\r\n        super();\r\n\r\n        this.state = {\r\n            currentView : '3d',\r\n            showGrid : true\r\n        }\r\n        this.viewSelectorItemClicked = this.viewSelectorItemClicked.bind(this);\r\n        this.onToggleShowGrid = this.onToggleShowGrid.bind(this);\r\n\r\n        this.simulator = React.createRef();\r\n    }\r\n\r\n    viewSelectorItemClicked (item) {\r\n        this.setState({currentView: item});\r\n        this.simulator.current.changeView(item);\r\n    }\r\n\r\n    onToggleShowGrid (value) {\r\n        this.setState({showGrid: value})\r\n        this.simulator.current.toggleGrids(value);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"simulator-container\">\r\n                <ViewSelector\r\n                    currentView={this.state.currentView}\r\n                    viewSelectorItemClicked={this.viewSelectorItemClicked}\r\n                />\r\n                <SimulatorEngine\r\n                    modelStorePath={this.props.modelStorePath}\r\n                    ref={this.simulator}\r\n                />\r\n                <ControllerCollection\r\n                    showGrid={this.state.showGrid}\r\n                    onToggleShowGrid={this.onToggleShowGrid}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CaromSimulator;","import React from 'react';\nimport './App.css';\n\nimport { CaromSimulator } from './lib/kozoom-3d-simulator';\n\nfunction App() {\n  return (\n    <div className=\"simulator-container\">\n      <CaromSimulator\n        modelStorePath=\"./models/\"\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}