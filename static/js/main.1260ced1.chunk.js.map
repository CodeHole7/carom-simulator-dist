{"version":3,"sources":["lib/kozoom-3d-simulator/src/CaromSimulator/viewSelector.js","lib/kozoom-3d-simulator/src/CaromSimulator/constants.js","lib/kozoom-3d-simulator/src/CaromSimulator/sceneManager/index.js","lib/kozoom-3d-simulator/src/CaromSimulator/simulatorEngine.js","lib/kozoom-3d-simulator/src/CaromSimulator/controller/slider.js","lib/kozoom-3d-simulator/src/CaromSimulator/controller/index.js","lib/kozoom-3d-simulator/src/CaromSimulator/index.js","App.js","serviceWorker.js","index.js"],"names":["ViewSelector","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","viewSelectorItemClicked","bind","assertThisInitialized","item","_self","str2Dclass","str3Dclass","currentView","react_default","a","createElement","className","onClick","Component","fileTableModel","fileBatModel","TABLE_LENGTH","offsetY","BALL_SIZE","ballMass","ballFriction","ballRestitution","ballLinearDamping","ballAngularDamping","ballPresure","carpetFriction","carpetRestitution","carpetSideRestitution","cueTipRestitution","maxDelta","INDEX_SIZE","INDEX_WHITE_X","INDEX_WHITE_Y","INDEX_YELLOW_X","INDEX_YELLOW_Y","INDEX_TARGET_X","INDEX_TARGET_Y","INDEX_SPEED","INDEX_CUEANGLE","INDEX_CUELINE","INDEX_SIDEENGLISH","INDEX_TOPSPIN","SceneManager","size","modelStorePath","ballPositions","controlOptions","drawBallPath","value","posPathCueWhite","pathCueWhite","posPathCueYellow","pathCueYellow","posPathTargetBall","pathTargetBall","yellowColors","redColors","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","dispose","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","i","push","BABYLON","CreateLines","points","scene","colors","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","configCameras","cameras","arcCam","Zero","attachControl","canvas","upperBetaLimit","wheelPrecision","upperRadiusLimit","lowerRadiusLimit","topCam","Math","PI","lowerBetaLimit","upperAlphaLimit","lowerAlphaLimit","changeView","loadModels","ImportMesh","newMeshes","objects","bat","position","y","z","updateBat","table","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","obj","name","material","bumpTexture","configCueBalls","configPhysicsEngine","updateControlOptions","data","cueLine","cueAngle","sideEnglish","topSpin","ballRadius","posCueBallWhite","deltaSideEnglish","deltaTopSpin","x","sin","cos","rotation","generateReflectionMaterial","root","others","probe","index","length","renderList","reflectionTexture","cubeTexture","reflectivityColor","reflectionFresnelParameters","bias","attachToMesh","carpet","rail","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","_this$ballPositions","posCueBallYellow","posTargetBall","cueBallWhite","CreateSphere","matCueBallWhite","diffuseTexture","cueBallYellow","matCueBallYellow","targetBall","matTargetBall","getEngine","runRenderLoop","registerBallPath","configGrids","color","myPoints","grids","toggleGrids","visible","visibility","_this$objects","posWhiteBall","prevPos","sqrt","pow","posYellowBall","initializeScene","clearColor","Up","render","_this$objects2","gravity","enablePhysics","physicsImpostor","SphereImpostor","mass","friction","restitution","physicsBody","linearDamping","angularDamping","pressure","console","log","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","BoxImpostor","MeshImpostor","playSimulation","_this$objects3","_this$controlOptions","speed","getPhysicsEngine","setTimeStep","velocity","applyImpulse","view","activeCamera","detachControl","SimulatorEngine","meshPicked","mesh","board","onSceneMount","e","state","showPath","option","react_babylonjs_es5","canvasId","onMeshPicked","React","InputSlider","componentWillReceiveProps","setState","updateValue","onUpdate","itemKey","onChangeValue","evt","target","onMinusPressed","currentValue","_this$props","min","step","onPlusPressed","_this$props2","max","_this$props3","containerClass","label","unitDom","style","display","index_es","icon","faMinus","flex","textAlign","faPlus","type","onChange","ControllerCollection","onInputSliderUpdated","key","tmp","assign","parseFloat","onControlOptionsUpdated","_this2","_this$state","showGrid","btnGridClass","btnShowPathClass","faTh","onToggleShowGrid","faCrosshairs","onToggleShowPath","faVolumeMute","slider_InputSlider","faBackward","faStop","faPlay","onPlayPressed","faForward","CaromSimulator","componentWillMount","updateSimulateInfo","info","parseInt","round","simulator","current","createRef","viewSelector_ViewSelector","simulatorEngine","ref","controller_ControllerCollection","App","src_CaromSimulator","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1260ced1.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './styles.css';\r\nexport default class ViewSelector extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.viewSelectorItemClicked = this.viewSelectorItemClicked.bind(this);\r\n    }\r\n\r\n    viewSelectorItemClicked (item) {\r\n        if(typeof this.props.viewSelectorItemClicked === 'function'){\r\n            this.props.viewSelectorItemClicked(item);\r\n        }\r\n    }\r\n\r\n    render () {\r\n        let _self = this;\r\n        let str2Dclass = \"view-selector-item\";\r\n        let str3Dclass = \"view-selector-item\";\r\n\r\n        if (this.props.currentView === '2d') {\r\n            str2Dclass += \" active\";\r\n        } else {\r\n            str3Dclass += \" active\";\r\n        }\r\n        return (\r\n            <div className=\"view-selector\">\r\n                <span\r\n                    className={str2Dclass}\r\n                    onClick={function () { _self.viewSelectorItemClicked('2d') }}\r\n                >2D</span>\r\n                <span\r\n                    className={str3Dclass}\r\n                    onClick={function () { _self.viewSelectorItemClicked('3d') }}\r\n                >3D</span>\r\n            </div>\r\n        )\r\n    }\r\n}","// model files\r\nexport const fileTableModel = \"table.babylon\";\r\nexport const fileBatModel = \"bat.babylon\";\r\nexport const TABLE_LENGTH = 400; //pixel\r\nexport const offsetY = 5.2; //pixel\r\n// end model files\r\n\r\n// for simulator\r\nexport const BALL_SIZE = 5.715; // cm\r\n\r\nexport const ballMass = 0.15; //kg\r\nexport const ballFriction = 0.08; //u\r\nexport const ballRestitution = 0.92; //e\r\n\r\nexport const ballLinearDamping = 0.1;\r\nexport const ballAngularDamping = 0.15;\r\nexport const ballPresure = 1;\r\n\r\nexport const carpetFriction = 0.2; //u\r\nexport const carpetRestitution = 0.2; //e\r\n\r\nexport const carpetSideRestitution = 0.6; //e\r\n\r\nexport const cueTipFriction = 0.6;\r\nexport const cueTipRestitution = 0.75;\r\n\r\nexport const maxDelta = 0.4;\r\n// end for simulator\r\n\r\n// get data from server\r\nexport const INDEX_SIZE = 3;\r\nexport const INDEX_WHITE_X = 6;\r\nexport const INDEX_WHITE_Y = 7;\r\nexport const INDEX_YELLOW_X = 8;\r\nexport const INDEX_YELLOW_Y = 9;\r\nexport const INDEX_TARGET_X = 10;\r\nexport const INDEX_TARGET_Y = 11;\r\nexport const INDEX_SPEED = 12;\r\nexport const INDEX_CUEANGLE = 13;\r\nexport const INDEX_CUELINE = 14;\r\nexport const INDEX_SIDEENGLISH = 15;\r\nexport const INDEX_TOPSPIN = 16;\r\n// end get data for server","import * as BABYLON from 'babylonjs';\r\nimport {\r\n    TABLE_LENGTH,\r\n    BALL_SIZE,\r\n\r\n    offsetY,\r\n    fileTableModel,\r\n    fileBatModel,\r\n\r\n    ballMass,\r\n    ballFriction,\r\n    ballRestitution,\r\n    ballLinearDamping,\r\n    ballAngularDamping,\r\n    ballPresure,\r\n    \r\n    cueTipRestitution,\r\n\r\n    carpetFriction,\r\n    carpetRestitution,\r\n    carpetSideRestitution,\r\n    maxDelta\r\n} from '../constants';\r\n\r\nexport default class SceneManager {\r\n    constructor (\r\n        size,\r\n        modelStorePath,\r\n        currentView,\r\n        ballPositions,\r\n        controlOptions\r\n    ) {\r\n        this.scene = undefined;\r\n        this.canvas = undefined;\r\n\r\n        this.size = size;\r\n\r\n        this.ballRadius = 400 * BALL_SIZE / (this.size * 100);\r\n        console.log('ball radius', this.ballRadius)\r\n\r\n        this.modelStorePath = modelStorePath;\r\n\r\n        this.ballPositions = {\r\n            posCueBallWhite: {\r\n                x: TABLE_LENGTH * ballPositions.posCueBallWhite.x / size,\r\n                z: TABLE_LENGTH * ballPositions.posCueBallWhite.z / size\r\n            },\r\n            posCueBallYellow: {\r\n                x: TABLE_LENGTH * ballPositions.posCueBallYellow.x / size,\r\n                z: TABLE_LENGTH * ballPositions.posCueBallYellow.z / size\r\n            },\r\n            posTargetBall: {\r\n                x: TABLE_LENGTH * ballPositions.posTargetBall.x / size,\r\n                z: TABLE_LENGTH * ballPositions.posTargetBall.z / size\r\n            }\r\n        };\r\n\r\n        this.currentView = currentView;\r\n\r\n        this.cameras = {\r\n            arcCam: undefined,\r\n            topCam: undefined\r\n        };\r\n\r\n        this.objects = {\r\n            table: undefined,\r\n            bat: undefined,\r\n            cueBallWhite: undefined,\r\n            cueBallYellow: undefined,\r\n            targetBall: undefined\r\n        };\r\n\r\n        this.controlOptions = controlOptions;\r\n\r\n        this.grids = [];\r\n\r\n        this.posPathCueWhite = [];\r\n        this.pathCueWhite = [];\r\n\r\n        this.posPathCueYellow = [];\r\n        this.pathCueYellow = [];\r\n\r\n        this.posPathTargetBall = [];\r\n        this.pathTargetBall = [];\r\n    }\r\n\r\n    drawBallPath = (value) => {\r\n        const _self = this;\r\n        let {\r\n            posPathCueWhite, pathCueWhite,\r\n            posPathCueYellow, pathCueYellow,\r\n            posPathTargetBall, pathTargetBall\r\n        } = this;\r\n        \r\n        var yellowColors = [];\r\n        var redColors = [];\r\n        for(var obj of pathCueWhite) {\r\n            obj.dispose();\r\n        }\r\n        for(obj of pathCueYellow) {\r\n            obj.dispose();\r\n        }\r\n        for(obj of pathTargetBall) {\r\n            obj.dispose();\r\n        }\r\n\r\n        for (var i in posPathCueYellow){\r\n            yellowColors.push(new BABYLON.Color4(1, 1, 0, 1));\r\n        }\r\n        for (var i in posPathTargetBall) {\r\n            redColors.push(new BABYLON.Color4(1, 0, 0, 1));\r\n        }\r\n\r\n        if (value === true) {\r\n            pathCueWhite.push(BABYLON.MeshBuilder.CreateLines(\"lines\", {points: posPathCueWhite}, _self.scene));\r\n            pathCueYellow.push(BABYLON.MeshBuilder.CreateLines(\"lines\", {points: posPathCueYellow, colors: yellowColors}, _self.scene));\r\n            pathTargetBall.push(BABYLON.MeshBuilder.CreateLines(\"lines\", {points: posPathTargetBall, colors: redColors}, _self.scene));\r\n            // console.log('pathes', posPathCueWhite)\r\n        } else {\r\n            for(var obj of pathCueWhite) {\r\n                obj.dispose();\r\n            }\r\n            for(obj of pathCueYellow) {\r\n                obj.dispose();\r\n            }\r\n            for(obj of pathTargetBall) {\r\n                obj.dispose();\r\n            }\r\n            pathCueWhite = [];\r\n            pathCueYellow = [];\r\n            pathTargetBall = [];\r\n        }\r\n    }\r\n\r\n    configCameras = () => {\r\n        const _self = this;\r\n        _self.cameras.arcCam = new BABYLON.ArcRotateCamera(\"Camera-Arc\", 4.44, 1.05, 300, BABYLON.Vector3.Zero(), _self.scene);\r\n        _self.cameras.arcCam.attachControl(_self.canvas);\r\n        _self.cameras.arcCam.upperBetaLimit = 1.5;\r\n        _self.cameras.arcCam.wheelPrecision = 0.2;\r\n        \r\n        _self.cameras.arcCam.upperRadiusLimit = 500;\r\n        _self.cameras.arcCam.lowerRadiusLimit = 200;\r\n        \r\n        _self.cameras.topCam = new BABYLON.ArcRotateCamera(\"Camera-Top\", -Math.PI/2, 0, 330, BABYLON.Vector3.Zero(), _self.scene);\r\n\r\n        _self.cameras.topCam.upperBetaLimit = 0;\r\n        _self.cameras.topCam.lowerBetaLimit = 0;\r\n\r\n        _self.cameras.topCam.upperAlphaLimit = -Math.PI/2;\r\n        _self.cameras.topCam.lowerAlphaLimit = -Math.PI/2;\r\n\r\n        _self.cameras.topCam.upperRadiusLimit = 330;\r\n        _self.cameras.topCam.lowerRadiusLimit = 330;\r\n\r\n        _self.changeView(_self.currentView);\r\n    }\r\n\r\n    loadModels = () => {\r\n        const _self = this;\r\n        const { modelStorePath } = this;\r\n\r\n        BABYLON.SceneLoader.ImportMesh(\"\", modelStorePath, fileBatModel, _self.scene, function (newMeshes) {\r\n            _self.objects.bat = newMeshes[0];\r\n            _self.objects.bat.position.y = 50;\r\n            _self.objects.bat.position.z = 90;\r\n            _self.updateBat(_self.controlOptions);\r\n            \r\n            BABYLON.SceneLoader.ImportMesh(\"\", modelStorePath, fileTableModel, _self.scene, function (newMeshes) {\r\n                _self.objects.table = newMeshes;\r\n                for(var obj of newMeshes){\r\n                    if(obj.name === 'carpet'){\r\n                        // assign bump\r\n                        obj.material.bumpTexture = new BABYLON.Texture(modelStorePath+'carpet-bump.png', _self.scene);\r\n                        // end assign bump\r\n                    }\r\n                }\r\n                \r\n                _self.configCueBalls();\r\n                _self.configPhysicsEngine();\r\n            });\r\n        });\r\n    }\r\n\r\n    updateControlOptions = (data) => {\r\n        this.controlOptions = data;\r\n        this.updateBat(data);\r\n    }\r\n\r\n    updateBat = (data) => {\r\n        const {\r\n            cueLine,\r\n            cueAngle,\r\n            sideEnglish,\r\n            topSpin,\r\n        } = data;\r\n        const {size, ballRadius} = this;\r\n        const {posCueBallWhite} = this.ballPositions;\r\n        const {bat} = this.objects;\r\n\r\n        let deltaSideEnglish = TABLE_LENGTH * sideEnglish / (size * 1000);\r\n        let deltaTopSpin = TABLE_LENGTH * topSpin / (size * 1000);\r\n\r\n        bat.position.x = posCueBallWhite.x\r\n                         - deltaSideEnglish * Math.sin((Math.PI * cueLine / 180))\r\n                         - deltaTopSpin * Math.sin((Math.PI * cueAngle / 180)) * Math.cos((Math.PI * cueLine / 180));\r\n        bat.position.z = posCueBallWhite.z\r\n                         + deltaSideEnglish * Math.cos((Math.PI * cueLine / 180))\r\n                         - deltaTopSpin * Math.sin((Math.PI * cueAngle / 180)) * Math.sin((Math.PI * cueLine / 180));\r\n        bat.position.y = ballRadius/2 + offsetY\r\n                         + deltaTopSpin * Math.cos((Math.PI * cueAngle / 180));\r\n        \r\n        bat.rotation = new BABYLON.Vector3(\r\n            0,\r\n            -(Math.PI * cueLine / 180),\r\n            Math.PI/2 + (Math.PI * cueAngle / 180)\r\n        );\r\n    }\r\n\r\n    generateReflectionMaterial = (root, others) => {\r\n        let {scene} = this;\r\n\t\t\r\n\t\tvar probe = new BABYLON.ReflectionProbe(\"satelliteProbe\" + root.name, 512, scene);\r\n\t\tfor (var index = 0; index < others.length; index++) {\r\n\t\t\tprobe.renderList.push(others[index]);\t\t\t\r\n\t\t}\r\n\t\t\r\n        root.material.reflectionTexture = probe.cubeTexture;\r\n        root.material.reflectivityColor = new BABYLON.Color3(0.2, 0.2, 0.2);\r\n\t\t\r\n\t\troot.material.reflectionFresnelParameters = new BABYLON.FresnelParameters();\r\n        root.material.reflectionFresnelParameters.bias = 0;\r\n\t\tprobe.attachToMesh(root);\r\n    }\r\n    \r\n    configCueBalls = () => {\r\n        const _self = this;\r\n        const {\r\n            modelStorePath,\r\n            ballRadius\r\n        } = this;\r\n\r\n        const { table } = this.objects;\r\n        const {arcCam} = this.cameras;\r\n        let carpet, rail;\r\n        for(var obj of table) {\r\n            if (obj.name === 'carpet') carpet = obj;\r\n            else if (obj.name === 'carpet-side') rail = obj;\r\n        }\r\n        let {\r\n            posCueBallWhite,\r\n            posCueBallYellow,\r\n            posTargetBall\r\n        } = this.ballPositions;\r\n\r\n        _self.objects.cueBallWhite = BABYLON.Mesh.CreateSphere(\"sphere1\", 16, ballRadius, _self.scene);\r\n        _self.objects.cueBallWhite.position.y = ballRadius - offsetY;\r\n        _self.objects.cueBallWhite.position.x = posCueBallWhite.x;\r\n        _self.objects.cueBallWhite.position.z = posCueBallWhite.z;\r\n        // arcCam.setTarget(_self.objects.cueBallWhite);\r\n\r\n        var matCueBallWhite = new BABYLON.StandardMaterial(\"redMat\", _self.scene);\r\n        matCueBallWhite.diffuseTexture = new BABYLON.Texture(modelStorePath + \"cueball-white.jpg\", _self.scene);\r\n        _self.objects.cueBallWhite.material = matCueBallWhite;\r\n\r\n        _self.objects.cueBallYellow = BABYLON.Mesh.CreateSphere(\"sphere2\", 16, ballRadius, _self.scene);\r\n        _self.objects.cueBallYellow.position.y = ballRadius - offsetY;\r\n        _self.objects.cueBallYellow.position.x = posCueBallYellow.x;\r\n        _self.objects.cueBallYellow.position.z = posCueBallYellow.z;\r\n\r\n        var matCueBallYellow = new BABYLON.StandardMaterial(\"redMat\", _self.scene);\r\n        matCueBallYellow.diffuseTexture = new BABYLON.Texture(modelStorePath + \"cueball-yellow.jpg\", _self.scene);\r\n        _self.objects.cueBallYellow.material = matCueBallYellow;\r\n\r\n        _self.objects.targetBall = BABYLON.Mesh.CreateSphere(\"sphere3\", 16, ballRadius, _self.scene);\r\n        _self.objects.targetBall.position.y = ballRadius - offsetY;\r\n        _self.objects.targetBall.position.x = posTargetBall.x;\r\n        _self.objects.targetBall.position.z = posTargetBall.z;\r\n\r\n        var matTargetBall = new BABYLON.StandardMaterial(\"redMat\", _self.scene);\r\n        matTargetBall.diffuseTexture = new BABYLON.Texture(modelStorePath + \"targetBall.jpg\", _self.scene);\r\n        _self.objects.targetBall.material = matTargetBall;\r\n\r\n        _self.generateReflectionMaterial(_self.objects.cueBallWhite, [_self.objects.cueBallYellow, _self.objects.targetBall, _self.objects.bat, carpet, rail]);\r\n        _self.generateReflectionMaterial(_self.objects.cueBallYellow, [_self.objects.cueBallWhite, _self.objects.targetBall, _self.objects.bat, carpet, rail]);\r\n        _self.generateReflectionMaterial(_self.objects.targetBall, [_self.objects.cueBallWhite, _self.objects.cueBallYellow, _self.objects.bat, carpet, rail]);\r\n\r\n        _self.scene.getEngine().runRenderLoop(() => {\r\n            if (_self.scene) {\r\n                _self.registerBallPath();\r\n            }\r\n        });\r\n    }\r\n\r\n    configGrids = () => {\r\n        const _self = this;\r\n        const grayRate = 0.7;\r\n        const color = [new BABYLON.Color4(grayRate,grayRate,grayRate,1), new BABYLON.Color4(grayRate,grayRate,grayRate,1)];\r\n        for (var i = 0; i < 15; i++) {\r\n            let myPoints = [\r\n                new BABYLON.Vector3(-TABLE_LENGTH*7/16 + i * TABLE_LENGTH/16, offsetY, -TABLE_LENGTH/4),\r\n                new BABYLON.Vector3(-TABLE_LENGTH*7/16 + i * TABLE_LENGTH/16, offsetY, TABLE_LENGTH/4)\r\n            ];\r\n            _self.grids.push(BABYLON.MeshBuilder.CreateLines(\"lines\", {points: myPoints, colors: color}, _self.scene));\r\n        }\r\n        for (i = 0; i < 7; i++) {\r\n            let myPoints = [\r\n                new BABYLON.Vector3(-TABLE_LENGTH/2, offsetY, -TABLE_LENGTH*3/16 + i * TABLE_LENGTH/16),\r\n                new BABYLON.Vector3(TABLE_LENGTH/2, offsetY, -TABLE_LENGTH*3/16 + i * TABLE_LENGTH/16)\r\n            ];\r\n            _self.grids.push(BABYLON.MeshBuilder.CreateLines(\"lines\", {points: myPoints, colors: color}, _self.scene));\r\n        }\r\n    }\r\n\r\n    toggleGrids = (visible) => {\r\n        const {grids} = this;\r\n        for (var i = 0; i < grids.length; i++) {\r\n            grids[i].visibility = visible;\r\n        }\r\n    }\r\n\r\n    registerBallPath = () => {\r\n        var {\r\n            posPathCueWhite,\r\n            posPathCueYellow,\r\n            posPathTargetBall\r\n        } = this;\r\n\r\n        var {\r\n            cueBallWhite,\r\n            cueBallYellow,\r\n            targetBall\r\n        } = this.objects;\r\n        \r\n        // // cue white ball\r\n        var posWhiteBall = cueBallWhite.position;\r\n        if (posPathCueWhite.length === 0) {\r\n            posPathCueWhite.push(posWhiteBall)\r\n        } else {\r\n            let prevPos = posPathCueWhite[posPathCueWhite.length - 1];\r\n            let delta = Math.sqrt(\r\n                        Math.pow(prevPos.x - posWhiteBall.x, 2) +\r\n                        Math.pow(prevPos.y - posWhiteBall.y, 2) + \r\n                        Math.pow(prevPos.z - posWhiteBall.z, 2)\r\n                    );\r\n            if (delta > maxDelta) posPathCueWhite.push(posWhiteBall);\r\n        }\r\n        // end cue white ball\r\n\r\n        // cue yellow ball\r\n        var posYellowBall = cueBallYellow.position;\r\n        if (posPathCueYellow.length === 0) {\r\n            posPathCueYellow.push(posYellowBall)\r\n        } else {\r\n            let prevPos = posPathCueYellow[posPathCueYellow.length - 1];\r\n            let delta = Math.sqrt(\r\n                        Math.pow(prevPos.x - posWhiteBall.x, 2) +\r\n                        Math.pow(prevPos.y - posWhiteBall.y, 2) + \r\n                        Math.pow(prevPos.z - posWhiteBall.z, 2)\r\n                    );\r\n            if (delta > maxDelta) posPathCueYellow.push(posYellowBall);\r\n        }\r\n        // end cue yellow ball\r\n\r\n        // cue Target ball\r\n        var posTargetBall = targetBall.position;\r\n        if (posPathTargetBall.length === 0) {\r\n            posPathTargetBall.push(posTargetBall)\r\n        } else {\r\n            let prevPos = posPathTargetBall[posPathTargetBall.length - 1];\r\n            let delta = Math.sqrt(\r\n                        Math.pow(prevPos.x - posTargetBall.x, 2) +\r\n                        Math.pow(prevPos.y - posTargetBall.y, 2) + \r\n                        Math.pow(prevPos.z - posTargetBall.z, 2)\r\n                    );\r\n            if (delta > maxDelta) posPathTargetBall.push(posTargetBall);\r\n        }\r\n        // end cue Target ball\r\n    }\r\n\r\n    initializeScene = (scene, canvas) => {\r\n        let _self = this;\r\n        _self.scene = scene;\r\n        _self.canvas = canvas;\r\n\r\n        _self.scene.clearColor = new BABYLON.Color3(0.05, 0.05, 0.05);\r\n\r\n        new BABYLON.HemisphericLight('light', BABYLON.Vector3.Up(), scene);\r\n\r\n        _self.configCameras();\r\n        _self.loadModels();\r\n        _self.configGrids();\r\n\r\n        _self.scene.getEngine().runRenderLoop(() => {\r\n            if (scene) {\r\n                scene.render();\r\n            }\r\n        });\r\n    }\r\n\r\n    changeView (view) {\r\n        const _self = this;\r\n        \r\n        if (view === '2d') {\r\n            _self.scene.activeCamera = _self.cameras.topCam;\r\n            _self.cameras.arcCam.detachControl(_self.canvas);\r\n            _self.cameras.topCam.attachControl(_self.canvas);\r\n        } else {\r\n            _self.scene.activeCamera = _self.cameras.arcCam;\r\n            _self.cameras.arcCam.attachControl(_self.canvas);\r\n            _self.cameras.topCam.detachControl(_self.canvas);\r\n        }\r\n    }\r\n\r\n    configPhysicsEngine = () => {\r\n        let { scene, size } = this;\r\n        let {cueBallWhite, cueBallYellow, targetBall, table} = this.objects;\r\n        let gravity = TABLE_LENGTH * 9.8 / size;\r\n        scene.enablePhysics(new BABYLON.Vector3(0, -gravity, 0));\r\n        \r\n        // add physics engine for cue balls\r\n        cueBallWhite.physicsImpostor = new BABYLON.PhysicsImpostor(\r\n            cueBallWhite,\r\n            BABYLON.PhysicsImpostor.SphereImpostor,\r\n            {\r\n                mass: ballMass,\r\n                friction: ballFriction,\r\n                restitution: ballRestitution\r\n            },\r\n            scene\r\n        );\r\n\r\n        cueBallWhite.physicsImpostor.physicsBody.linearDamping = ballLinearDamping;\r\n        cueBallWhite.physicsImpostor.physicsBody.angularDamping = ballAngularDamping;\r\n        cueBallWhite.physicsImpostor.pressure = ballPresure;\r\n        console.log('physics imposter', cueBallWhite.physicsImpostor)\r\n\r\n        cueBallYellow.physicsImpostor = new BABYLON.PhysicsImpostor(\r\n            cueBallYellow,\r\n            BABYLON.PhysicsImpostor.SphereImpostor,\r\n            {\r\n                mass: ballMass,\r\n                friction: ballFriction,\r\n                restitution: ballRestitution\r\n            },\r\n            scene\r\n        );\r\n\r\n        cueBallYellow.physicsImpostor.physicsBody.linearDamping = ballLinearDamping;\r\n        cueBallYellow.physicsImpostor.physicsBody.angularDamping = ballAngularDamping;\r\n        cueBallYellow.physicsImpostor.pressure = ballPresure;\r\n\r\n        targetBall.physicsImpostor = new BABYLON.PhysicsImpostor(\r\n            targetBall,\r\n            BABYLON.PhysicsImpostor.SphereImpostor,\r\n            {\r\n                mass: ballMass,\r\n                friction: ballFriction,\r\n                restitution: ballRestitution\r\n            },\r\n            scene\r\n        );\r\n\r\n        targetBall.physicsImpostor.physicsBody.linearDamping = ballLinearDamping;\r\n        targetBall.physicsImpostor.physicsBody.angularDamping = ballAngularDamping;\r\n        targetBall.physicsImpostor.pressure = ballPresure;\r\n        // end add physics engine for cue balls\r\n\r\n        // add physics engine for carpet\r\n        for (var obj of table){\r\n            if (obj.name === 'carpet') {\r\n                obj.physicsImpostor = new BABYLON.PhysicsImpostor(\r\n                    obj,\r\n                    BABYLON.PhysicsImpostor.BoxImpostor,\r\n                    {\r\n                        mass: 0,\r\n                        friction: carpetFriction,\r\n                        restitution: carpetRestitution\r\n                    },\r\n                    scene\r\n                );\r\n            } else if (obj.name === 'carpet-side') {\r\n                obj.physicsImpostor = new BABYLON.PhysicsImpostor(\r\n                    obj,\r\n                    BABYLON.PhysicsImpostor.MeshImpostor,\r\n                    {\r\n                        mass: 0,\r\n                        friction: carpetFriction,\r\n                        restitution: carpetSideRestitution\r\n                    },\r\n                    scene\r\n                );\r\n            }\r\n        }\r\n        // end add physics engine for carpet\r\n    }\r\n\r\n    playSimulation = () => {\r\n        let { cueBallWhite, bat } = this.objects;\r\n        let {\r\n            speed,\r\n            cueLine,\r\n            cueAngle,\r\n        } = this.controlOptions;\r\n\r\n        let _self = this;\r\n        let {scene, size} = this;\r\n\r\n        scene.getEngine().runRenderLoop(() => {\r\n            if (scene) {\r\n                _self.drawBallPath(true);\r\n            }\r\n        });\r\n        scene.getPhysicsEngine().setTimeStep(0.0025);\r\n\r\n        console.log(cueLine, speed, size);\r\n        let unit = 400 / (size * 100);\r\n        let velocity = unit * speed * cueTipRestitution;\r\n\r\n        // cueBallWhite.physicsImpostor.setAngularVelocity(new BABYLON.Quaternion(-10, 5, -7, 0));\r\n        // cueBallWhite.physicsImpostor.setLinearVelocity(\r\n        //     new BABYLON.Vector3(\r\n        //         -velocity * Math.cos(cueLine * Math.PI / 180) * Math.cos(cueAngle * Math.PI / 180),\r\n        //         -velocity * Math.sin(cueAngle * Math.PI / 180),\r\n        //         -velocity * Math.sin(cueLine * Math.PI / 180) * Math.cos(cueAngle * Math.PI / 180)\r\n        //     )\r\n        // );\r\n        cueBallWhite.physicsImpostor.applyImpulse(\r\n            new BABYLON.Vector3(\r\n                -velocity * Math.cos(cueLine * Math.PI / 180) * Math.cos(cueAngle * Math.PI / 180),\r\n                -velocity * Math.sin(cueAngle * Math.PI / 180),\r\n                -velocity * Math.sin(cueLine * Math.PI / 180) * Math.cos(cueAngle * Math.PI / 180)\r\n            ),\r\n            bat.position\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\nimport { Engine, Scene } from 'react-babylonjs';\r\n\r\nimport './styles.css';\r\n\r\nimport SceneManager from './sceneManager';\r\n\r\nclass SimulatorEngine extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showPath: false,\r\n        }\r\n\r\n        this.board = new SceneManager(\r\n            this.props.size,\r\n            this.props.modelStorePath,\r\n            this.props.currentView,\r\n            {\r\n                posCueBallWhite: {\r\n                    x: this.props.posCueBallWhite.x,\r\n                    z: this.props.posCueBallWhite.z\r\n                },\r\n                posCueBallYellow: {\r\n                    x: this.props.posCueBallYellow.x,\r\n                    z: this.props.posCueBallYellow.z\r\n                },\r\n                posTargetBall: {\r\n                    x: this.props.posTargetBall.x,\r\n                    z: this.props.posTargetBall.z\r\n                }\r\n            },\r\n            {\r\n                cueLine: this.props.cueLine,\r\n                cueAngle: this.props.cueAngle,\r\n                sideEnglish: this.props.sideEnglish,\r\n                topSpin: this.props.topSpin,\r\n                speed: this.props.speed,\r\n            }\r\n        );\r\n    }\r\n\r\n    meshPicked = ( mesh ) => {\r\n        console.log('mesh picked', mesh);\r\n    }\r\n\r\n    drawBallPath = (value) => {\r\n        this.board.drawBallPath(value);\r\n    }\r\n\r\n    onSceneMount = ( e ) => {\r\n        const { canvas, scene } = e;\r\n        this.board.initializeScene(scene, canvas);\r\n    }\r\n\r\n    changeView (option) {\r\n        this.board.changeView(option);\r\n    }\r\n\r\n    toggleGrids = (visible) => {\r\n        this.board.toggleGrids(visible);\r\n    }\r\n\r\n    playSimulation = () => {\r\n        this.board.playSimulation();\r\n    }\r\n\r\n    updateControlOptions = (data) => {\r\n        this.board.updateControlOptions(data);\r\n    }\r\n    render () {\r\n        return (\r\n            <Engine canvasId=\"carom-simulator-canvas\">\r\n                <Scene\r\n                    onMeshPicked={this.meshPicked}\r\n                    onSceneMount={this.onSceneMount}\r\n                />\r\n            </Engine>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SimulatorEngine;","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faMinus, faPlus } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport './slider.css';\r\n\r\nexport default class InputSlider extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            value: this.props.value?this.props.value:0\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps = (props) => {\r\n        const {value} = props;\r\n        this.setState({value:value});\r\n    }\r\n\r\n    updateValue = (value) => {\r\n        this.setState({value:value})\r\n        this.props.onUpdate(this.props.itemKey, value);\r\n    }\r\n\r\n    onChangeValue = (evt) => {\r\n        const value = evt.target.value;\r\n        this.updateValue(value);\r\n    }\r\n\r\n    onMinusPressed = () => {\r\n        var currentValue = this.state.value;\r\n        let { min, step } = this.props;\r\n        if (step === undefined) step = 0.1;\r\n        step *= 10;\r\n        currentValue = (currentValue*10 - step)/10;\r\n        if (currentValue <  min) currentValue = min;\r\n        this.updateValue(currentValue);\r\n    }\r\n\r\n    onPlusPressed = () => {\r\n        var currentValue = this.state.value;\r\n        let { max, step } = this.props;\r\n        if (step === undefined) step = 0.1;\r\n        step *= 10;\r\n        currentValue = (currentValue*10 + step)/10;\r\n        if (currentValue > max) currentValue = max;\r\n        this.updateValue(currentValue);\r\n    }\r\n\r\n    render () {\r\n        const {\r\n            value,\r\n        } = this.state;\r\n\r\n        let {\r\n            containerClass,\r\n            label,\r\n            min,\r\n            max,\r\n            unitDom,\r\n            step\r\n        } = this.props\r\n        if (step === undefined) step = 0.1;\r\n        return (\r\n            <div className={containerClass}>\r\n                <div style={{display:'flex'}}>\r\n                    <FontAwesomeIcon\r\n                        icon={faMinus}\r\n                        className=\"btn-change-value\"\r\n                        onClick={this.onMinusPressed}\r\n                    />\r\n                    <span style={{flex:1, textAlign:'center'}}>\r\n                        {label}\r\n                        <span> : {value}{unitDom}</span>\r\n                    </span>\r\n                    <FontAwesomeIcon\r\n                        icon={faPlus}\r\n                        className=\"btn-change-value\"\r\n                        onClick={this.onPlusPressed}\r\n                    />\r\n                </div>\r\n                <input\r\n                    type=\"range\"\r\n                    min={min}\r\n                    max={max}\r\n                    value={value}\r\n                    className=\"slider\"\r\n                    step={step}\r\n                    onChange={this.onChangeValue}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n    faTh,\r\n    faCrosshairs,\r\n    faVolumeMute,\r\n    faBackward,\r\n    faForward,\r\n    faStop,\r\n    faPlay\r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport InputSlider from './slider';\r\nimport './style.css';\r\n\r\nexport default class ControllerCollection extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            cueLine: this.props.cueLine,\r\n            cueAngle: this.props.cueAngle,\r\n            sideEnglish: this.props.sideEnglish,\r\n            topSpin: this.props.topSpin,\r\n            speed: this.props.speed\r\n        }\r\n    }\r\n\r\n    onInputSliderUpdated = (key, value) => {\r\n        let tmp = Object.assign({}, this.state);\r\n        tmp[key] = parseFloat(value);\r\n        this.setState(tmp);\r\n        this.props.onControlOptionsUpdated(tmp);\r\n    }\r\n\r\n    render () {\r\n        const {cueLine, cueAngle, sideEnglish, topSpin, speed} = this.state;\r\n        const {showGrid, showPath} = this.props;\r\n        var btnGridClass = \"toggle-btn\";\r\n        var btnShowPathClass = \"toggle-btn\";\r\n        var btnMuteClass = \"toggle-btn\";\r\n\r\n        if (showGrid === true) btnGridClass += \" active\";\r\n        if (showPath === true) btnShowPathClass += \" active\";\r\n        return (\r\n            <div>\r\n                <div className=\"common-controller-container\">\r\n                    <FontAwesomeIcon\r\n                        className={btnGridClass}\r\n                        icon={faTh}\r\n                        onClick={() => {this.props.onToggleShowGrid(!showGrid)}}\r\n                    />\r\n\r\n                    <FontAwesomeIcon\r\n                        className={btnShowPathClass}\r\n                        icon={faCrosshairs}\r\n                        onClick={() => {this.props.onToggleShowPath(!showPath)}}\r\n                    />\r\n\r\n                    <FontAwesomeIcon\r\n                        className={btnMuteClass}\r\n                        icon={faVolumeMute}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <InputSlider\r\n                        label=\"Cue Line\"\r\n                        containerClass=\"slider-container\"\r\n                        min={-180}\r\n                        max={180}\r\n                        value={cueLine}\r\n                        unitDom={<sup>o</sup>}\r\n                        itemKey=\"cueLine\"\r\n                        onUpdate={this.onInputSliderUpdated}\r\n                    />\r\n                    <InputSlider\r\n                        label=\"Cue Angle\"\r\n                        containerClass=\"slider-container\"\r\n                        min={2}\r\n                        max={89}\r\n                        value={cueAngle}\r\n                        unitDom={<sup>o</sup>}\r\n                        itemKey=\"cueAngle\"\r\n                        onUpdate={this.onInputSliderUpdated}\r\n                    />\r\n                    <br/>\r\n                    <InputSlider\r\n                        label=\"Side English\"\r\n                        containerClass=\"slider-container\"\r\n                        min={-10.1}\r\n                        max={10.1}\r\n                        value={sideEnglish}\r\n                        unitDom={<span>mm</span>}\r\n                        itemKey=\"sideEnglish\"\r\n                        onUpdate={this.onInputSliderUpdated}\r\n                    />\r\n                    <InputSlider\r\n                        label=\"Top Spin\"\r\n                        containerClass=\"slider-container\"\r\n                        min={-11.1}\r\n                        max={11.1}\r\n                        value={topSpin}\r\n                        unitDom={<span>mm</span>}\r\n                        itemKey=\"topSpin\"\r\n                        onUpdate={this.onInputSliderUpdated}\r\n                    />\r\n                    <InputSlider\r\n                        label=\"Speed\"\r\n                        containerClass=\"slider-container\"\r\n                        min={0}\r\n                        max={450}\r\n                        value={speed}\r\n                        step={1}\r\n                        unitDom={<span>cm/s</span>}\r\n                        itemKey=\"speed\"\r\n                        onUpdate={this.onInputSliderUpdated}\r\n                    />\r\n                </div>\r\n                <div className=\"play-controller-container\">\r\n                    <FontAwesomeIcon\r\n                        className=\"play-controller\"\r\n                        icon={faBackward}\r\n                    />\r\n                    <FontAwesomeIcon\r\n                        className=\"play-controller\"\r\n                        icon={faStop}\r\n                    />\r\n                    <FontAwesomeIcon\r\n                        className=\"play-controller\"\r\n                        icon={faPlay}\r\n                        onClick={this.props.onPlayPressed}\r\n                    />\r\n                    <FontAwesomeIcon\r\n                        className=\"play-controller\"\r\n                        icon={faForward}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nimport ViewSelector from './viewSelector';\r\nimport SimulatorEngine from './simulatorEngine';\r\nimport ControllerCollection from './controller';\r\n\r\nimport './styles.css';\r\n\r\nimport {\r\n    INDEX_SIZE,\r\n    INDEX_WHITE_X,\r\n    INDEX_WHITE_Y,\r\n    INDEX_YELLOW_X,\r\n    INDEX_YELLOW_Y,\r\n    INDEX_TARGET_X,\r\n    INDEX_TARGET_Y,\r\n    INDEX_CUELINE,\r\n    INDEX_CUEANGLE,\r\n    INDEX_SIDEENGLISH,\r\n    INDEX_TOPSPIN,\r\n    INDEX_SPEED\r\n} from './constants';\r\n\r\nclass CaromSimulator extends React.Component {\r\n    constructor () {\r\n        super();\r\n\r\n        this.state = {\r\n            currentView : '2d',\r\n            showGrid : true,\r\n            showPath: false,\r\n            size: 310,\r\n            cueLine: 30,\r\n            cueAngle: 5,\r\n            sideEnglish: -8.7,\r\n            topSpin: 7.5,\r\n            speed: 380,\r\n            posCueBallWhite: {},\r\n            posCueBallYellow: {},\r\n            posTargetBall: {}\r\n        }\r\n        this.simulator = React.createRef();\r\n    }\r\n    componentWillMount = () => {\r\n        this.updateSimulateInfo();\r\n    }\r\n    updateSimulateInfo = () => {\r\n        var info = [\r\n            'Michael Cacoulidis',\r\n            '...',\r\n            '0',\r\n            '310',\r\n            '2',\r\n            '1',\r\n            '0.7426666666666665',    // white-x\r\n            '0.11',                  // white-y\r\n            '0.5791666666666665',    // yellow-x\r\n            '0.6425',                // yellow-y\r\n            '0.6038333333333333',    // red-x\r\n            '0.22600000000000003',   // red-y\r\n            '2.846666666666669',     // speed\r\n            '0.03490658503988659',   // cue angle\r\n            '5.468558116924995',     // cue line\r\n            '-0.011250000000000001', // side english\r\n            '-0.009549999999999954'  // top spin\r\n        ]\r\n        // var info = [\r\n        //     'Michael Cacoulidis',\r\n        //     '...',\r\n        //     '0',\r\n        //     '310',\r\n        //     '2',\r\n        //     '1',\r\n        //     '0.7426666666666665',   // white-x\r\n        //     '0.11',                 // white-y\r\n        //     '0.5791666666666665',   // yellow-x\r\n        //     '0.6425',               // yellow-y\r\n        //     '0.6038333333333333',   // red-x\r\n        //     '0.22600000000000003',  // red-y\r\n        //     '2.846666666666669',    // speed\r\n        //     '0.746622',             // cue angle\r\n        //     '0.3069',               // cue line\r\n        //     '0.010130000000000001',// side english\r\n        //     '-0.009549999999999954' // top spin\r\n        // ]\r\n        let size = Math.sqrt(Math.pow(parseInt(info[INDEX_SIZE]), 2) / 5) / 50;\r\n\r\n        let cueLine = info[INDEX_CUELINE] / Math.PI * 180;\r\n        if (cueLine > 180) cueLine -= 360;\r\n        cueLine = Math.round(cueLine * 10) / 10;\r\n\r\n        let cueAngle = info[INDEX_CUEANGLE] / Math.PI * 180;\r\n        cueAngle = Math.round(cueAngle * 10) / 10;\r\n\r\n        let sideEnglish = parseFloat(info[INDEX_SIDEENGLISH]) * 1000;\r\n        sideEnglish = Math.round(sideEnglish * 10) / 10;\r\n\r\n        let topSpin = parseFloat(info[INDEX_TOPSPIN]) * 1000;\r\n        topSpin = Math.round(topSpin * 10) / 10;\r\n\r\n        let speed = parseFloat(info[INDEX_SPEED]) * 100;\r\n        speed = Math.round(speed);\r\n\r\n        let posCueBallWhite = {\r\n            x: parseFloat(info[INDEX_WHITE_X]),\r\n            z: parseFloat(info[INDEX_WHITE_Y])\r\n        }\r\n\r\n        let posCueBallYellow = {\r\n            x: parseFloat(info[INDEX_YELLOW_X]),\r\n            z: parseFloat(info[INDEX_YELLOW_Y])\r\n        }\r\n\r\n        let posTargetBall = {\r\n            x: parseFloat(info[INDEX_TARGET_X]),\r\n            z: parseFloat(info[INDEX_TARGET_Y])\r\n        }\r\n        let tmp = {\r\n            size: size,\r\n            cueLine: cueLine,\r\n            cueAngle: cueAngle,\r\n            sideEnglish: sideEnglish,\r\n            topSpin: topSpin,\r\n            speed: speed,\r\n            posCueBallWhite: posCueBallWhite,\r\n            posCueBallYellow: posCueBallYellow,\r\n            posTargetBall: posTargetBall\r\n        }\r\n\r\n        this.setState(tmp)\r\n        console.log(this.state)\r\n    }\r\n\r\n    viewSelectorItemClicked = (item) => {\r\n        this.setState({currentView: item});\r\n        this.simulator.current.changeView(item);\r\n    }\r\n\r\n    onToggleShowGrid = (value) => {\r\n        this.setState({showGrid: value})\r\n        this.simulator.current.toggleGrids(value);\r\n    }\r\n\r\n    onToggleShowPath = (value) => {\r\n        this.setState({showPath: value})\r\n        this.simulator.current.drawBallPath(value);\r\n    }\r\n\r\n    onPlayPressed = () => {\r\n        this.simulator.current.playSimulation();\r\n    }\r\n\r\n    onControlOptionsUpdated = (data) => {\r\n        this.simulator.current.updateControlOptions(data);\r\n    }\r\n\r\n    render () {\r\n        const {\r\n            currentView,\r\n\r\n            showGrid,\r\n            showPath,\r\n\r\n            size,\r\n            cueLine,\r\n            cueAngle,\r\n            sideEnglish,\r\n            topSpin,\r\n            speed,\r\n\r\n            posCueBallWhite,\r\n            posCueBallYellow,\r\n            posTargetBall,\r\n        } = this.state;\r\n        return (\r\n            <div className=\"simulator-container\">\r\n                <ViewSelector\r\n                    currentView={currentView}\r\n                    viewSelectorItemClicked={this.viewSelectorItemClicked}\r\n                />\r\n                <SimulatorEngine\r\n                    modelStorePath={this.props.modelStorePath}\r\n                    ref={this.simulator}\r\n\r\n                    size={size}\r\n                    currentView={currentView}\r\n                    cueLine = {cueLine}\r\n                    cueAngle = {cueAngle}\r\n                    sideEnglish = {sideEnglish}\r\n                    topSpin = {topSpin}\r\n                    speed = {speed}\r\n\r\n                    posCueBallWhite = {posCueBallWhite}\r\n                    posCueBallYellow = {posCueBallYellow}\r\n                    posTargetBall = {posTargetBall}\r\n                />\r\n                <ControllerCollection\r\n                    showGrid={showGrid}\r\n                    showPath={showPath}\r\n                    cueLine = {cueLine}\r\n                    cueAngle = {cueAngle}\r\n                    sideEnglish = {sideEnglish}\r\n                    topSpin = {topSpin}\r\n                    speed = {speed}\r\n\r\n                    onControlOptionsUpdated={this.onControlOptionsUpdated}\r\n\r\n                    onToggleShowGrid={this.onToggleShowGrid}\r\n                    onToggleShowPath = {this.onToggleShowPath}\r\n                    onPlayPressed = {this.onPlayPressed}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CaromSimulator;","import React from 'react';\nimport './App.css';\n\nimport { CaromSimulator } from './lib/kozoom-3d-simulator';\n\nfunction App() {\n  return (\n    <div className=\"simulator-container\">\n      <CaromSimulator\n        modelStorePath=\"./models/\"\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}