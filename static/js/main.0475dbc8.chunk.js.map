{"version":3,"sources":["lib/kozoom-3d-simulator/src/CaromSimulator/viewSelector.js","lib/kozoom-3d-simulator/src/CaromSimulator/constants.js","lib/kozoom-3d-simulator/src/CaromSimulator/simulatorEngine.js","lib/kozoom-3d-simulator/src/CaromSimulator/controller/slider.js","lib/kozoom-3d-simulator/src/CaromSimulator/controller/index.js","lib/kozoom-3d-simulator/src/CaromSimulator/index.js","App.js","serviceWorker.js","index.js"],"names":["ViewSelector","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","viewSelectorItemClicked","bind","assertThisInitialized","item","_self","str2Dclass","str3Dclass","currentView","react_default","a","createElement","className","onClick","Component","fileTableModel","fileBatModel","TABLE_LENGTH","ballRadius","ballMass","ballFriction","ballRestitution","carpetFriction","carpetRestitution","carpetSideRestitution","maxDelta","INDEX_SIZE","INDEX_WHITE_X","INDEX_WHITE_Y","INDEX_YELLOW_X","INDEX_YELLOW_Y","INDEX_TARGET_X","INDEX_TARGET_Y","INDEX_SPEED","INDEX_CUEANGLE","INDEX_CUELINE","INDEX_SIDEENGLISH","INDEX_TOPSPIN","SimulatorEngine","meshPicked","mesh","console","log","configCameras","arcCam","BABYLON","Zero","scene","attachControl","canvas","upperBetaLimit","wheelPrecision","upperRadiusLimit","lowerRadiusLimit","topCam","Math","PI","lowerBetaLimit","upperAlphaLimit","lowerAlphaLimit","configCueBalls","modelStorePath","cueBallWhite","CreateSphere","position","y","x","state","posCueBallWhite","z","matCueBallWhite","diffuseTexture","material","cueBallYellow","posCueBallYellow","matCueBallYellow","targetBall","posTargetBall","matTargetBall","configGrids","color","i","myPoints","grids","push","CreateLines","points","colors","toggleGrids","visible","length","visibility","loadModels","ImportMesh","newMeshes","table","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","obj","value","name","bumpTexture","err","return","bat","updateBat","configPhysicsEngine","_assertThisInitialize2","size","gravity","enablePhysics","physicsImpostor","SphereImpostor","mass","friction","restitution","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","BoxImpostor","MeshImpostor","registerBallPath","_assertThisInitialize3","posPathCueWhite","posPathCueYellow","posPathTargetBall","posWhiteBall","prevPos","sqrt","pow","posYellowBall","drawBallPath","setState","showPath","_assertThisInitialize4","pathCueWhite","pathCueYellow","pathTargetBall","yellowColors","redColors","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","dispose","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","onSceneMount","e","clearColor","setTimeout","Up","changeView","getEngine","runRenderLoop","render","playSimulation","_this$state","speed","cueLine","cueAngle","velocity","setAngularVelocity","setLinearVelocity","cos","sin","_this$state2","sideEnglish","topSpin","rotation","updateControlOptions","data","view","activeCamera","detachControl","react_babylonjs_es5","canvasId","onMeshPicked","React","InputSlider","componentWillReceiveProps","updateValue","onUpdate","itemKey","onChangeValue","evt","target","onMinusPressed","currentValue","_this$props","min","step","onPlusPressed","_this$props2","max","_this$props3","containerClass","label","unitDom","style","display","index_es","icon","faMinus","flex","textAlign","faPlus","type","onChange","ControllerCollection","onInputSliderUpdated","key","tmp","assign","parseFloat","onControlOptionsUpdated","_this2","showGrid","btnGridClass","btnShowPathClass","faTh","onToggleShowGrid","faCrosshairs","onToggleShowPath","faVolumeMute","slider_InputSlider","faBackward","faStop","faPlay","onPlayPressed","faForward","CaromSimulator","componentWillMount","updateSimulateInfo","info","parseInt","round","simulator","current","createRef","viewSelector_ViewSelector","simulatorEngine","ref","controller_ControllerCollection","App","src_CaromSimulator","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0475dbc8.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './styles.css';\r\nexport default class ViewSelector extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.viewSelectorItemClicked = this.viewSelectorItemClicked.bind(this);\r\n    }\r\n\r\n    viewSelectorItemClicked (item) {\r\n        if(typeof this.props.viewSelectorItemClicked === 'function'){\r\n            this.props.viewSelectorItemClicked(item);\r\n        }\r\n    }\r\n\r\n    render () {\r\n        let _self = this;\r\n        let str2Dclass = \"view-selector-item\";\r\n        let str3Dclass = \"view-selector-item\";\r\n\r\n        if (this.props.currentView === '2d') {\r\n            str2Dclass += \" active\";\r\n        } else {\r\n            str3Dclass += \" active\";\r\n        }\r\n        return (\r\n            <div className=\"view-selector\">\r\n                <span\r\n                    className={str2Dclass}\r\n                    onClick={function () { _self.viewSelectorItemClicked('2d') }}\r\n                >2D</span>\r\n                <span\r\n                    className={str3Dclass}\r\n                    onClick={function () { _self.viewSelectorItemClicked('3d') }}\r\n                >3D</span>\r\n            </div>\r\n        )\r\n    }\r\n}","// model files\r\nexport const fileTableModel = \"table.babylon\";\r\nexport const fileBatModel = \"bat.babylon\";\r\nexport const TABLE_LENGTH = 400;\r\n// end model files\r\n\r\n// for simulator\r\nexport const ballRadius = 10;\r\n\r\nexport const ballMass = 2;\r\nexport const ballFriction = 30;\r\nexport const ballRestitution = 0.6;\r\n\r\nexport const carpetFriction = 30;\r\nexport const carpetRestitution = 0.2;\r\nexport const carpetSideRestitution = 0.9;\r\n\r\nexport const maxDelta = 0.4;\r\n// end for simulator\r\n\r\n// get data from server\r\nexport const INDEX_SIZE = 3;\r\nexport const INDEX_WHITE_X = 6;\r\nexport const INDEX_WHITE_Y = 7;\r\nexport const INDEX_YELLOW_X = 8;\r\nexport const INDEX_YELLOW_Y = 9;\r\nexport const INDEX_TARGET_X = 10;\r\nexport const INDEX_TARGET_Y = 11;\r\nexport const INDEX_SPEED = 12;\r\nexport const INDEX_CUEANGLE = 13;\r\nexport const INDEX_CUELINE = 14;\r\nexport const INDEX_SIDEENGLISH = 15;\r\nexport const INDEX_TOPSPIN = 16;\r\n// end get data for server","import React from 'react';\r\n\r\nimport { Engine, Scene } from 'react-babylonjs';\r\nimport * as BABYLON from 'babylonjs';\r\n\r\nimport './styles.css';\r\n\r\nimport {\r\n    TABLE_LENGTH,\r\n    ballRadius,\r\n    fileTableModel,\r\n    fileBatModel,\r\n    ballMass,\r\n    ballFriction,\r\n    ballRestitution,\r\n    carpetFriction,\r\n    carpetRestitution,\r\n    carpetSideRestitution,\r\n    maxDelta\r\n} from './constants';\r\n\r\nclass SimulatorEngine extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showPath: false,\r\n            cueLine: this.props.cueLine,\r\n            cueAngle: this.props.cueAngle,\r\n            sideEnglish: this.props.sideEnglish,\r\n            topSpin: this.props.topSpin,\r\n            speed: this.props.speed,\r\n            posCueBallWhite: {\r\n                x: TABLE_LENGTH * this.props.posCueBallWhite.x / this.props.size,\r\n                z: TABLE_LENGTH * this.props.posCueBallWhite.z / this.props.size\r\n            },\r\n            posCueBallYellow: {\r\n                x: TABLE_LENGTH * this.props.posCueBallYellow.x / this.props.size,\r\n                z: TABLE_LENGTH * this.props.posCueBallYellow.z / this.props.size\r\n            },\r\n            posTargetBall: {\r\n                x: TABLE_LENGTH * this.props.posTargetBall.x / this.props.size,\r\n                z: TABLE_LENGTH * this.props.posTargetBall.z / this.props.size\r\n            },\r\n        }\r\n\r\n        this.scene = undefined;\r\n        this.canvas = undefined;\r\n\r\n        this.arcCam = undefined;\r\n        this.topCam = undefined;\r\n\r\n        this.table = undefined;\r\n        this.bat = undefined;\r\n\r\n        this.cueBallWhite = undefined;\r\n        this.cueBallYellow = undefined;\r\n        this.targetBall = undefined;\r\n\r\n        this.grids = [];\r\n\r\n        this.posPathCueWhite = [];\r\n        this.pathCueWhite = [];\r\n\r\n        this.posPathCueYellow = [];\r\n        this.pathCueYellow = [];\r\n\r\n        this.posPathTargetBall = [];\r\n        this.pathTargetBall = [];\r\n\r\n        console.log('check position', this.props.size, this.state);\r\n    }\r\n\r\n    meshPicked = ( mesh ) => {\r\n        console.log('mesh picked', mesh);\r\n    }\r\n\r\n    configCameras = () => {\r\n        const _self = this;\r\n        _self.arcCam = new BABYLON.ArcRotateCamera(\"Camera-Arc\", 4.44, 1.05, 300, BABYLON.Vector3.Zero(), _self.scene);\r\n        _self.arcCam.attachControl(_self.canvas);\r\n        _self.arcCam.upperBetaLimit = 1.5;\r\n        _self.arcCam.wheelPrecision = 0.2;\r\n        \r\n        _self.arcCam.upperRadiusLimit = 500;\r\n        _self.arcCam.lowerRadiusLimit = 200;\r\n        \r\n        _self.topCam = new BABYLON.ArcRotateCamera(\"Camera-Top\", -Math.PI/2, 0, 330, BABYLON.Vector3.Zero(), _self.scene);\r\n        // _self.topCam.mode = BABYLON.Camera.ORTHOGRAPHIC_CAMERA;\r\n        // _self.topCam.orthoTop = 120;\r\n        // _self.topCam.orthoBottom = -120;\r\n        // _self.topCam.orthoLeft = -240;\r\n        // _self.topCam.orthoRight = 240;\r\n\r\n        _self.topCam.upperBetaLimit = 0;\r\n        _self.topCam.lowerBetaLimit = 0;\r\n\r\n        _self.topCam.upperAlphaLimit = -Math.PI/2;\r\n        _self.topCam.lowerAlphaLimit = -Math.PI/2;\r\n\r\n        _self.topCam.upperRadiusLimit = 330;\r\n        _self.topCam.lowerRadiusLimit = 330;\r\n    }\r\n\r\n    configCueBalls = () => {\r\n        const _self = this;\r\n        const { modelStorePath } = this.props;\r\n\r\n        _self.cueBallWhite = BABYLON.Mesh.CreateSphere(\"sphere1\", 16, ballRadius, _self.scene);\r\n        _self.cueBallWhite.position.y = ballRadius;\r\n        _self.cueBallWhite.position.x = this.state.posCueBallWhite.x;\r\n        _self.cueBallWhite.position.z = this.state.posCueBallWhite.z;\r\n\r\n        var matCueBallWhite = new BABYLON.StandardMaterial(\"redMat\", _self.scene);\r\n        matCueBallWhite.diffuseTexture = new BABYLON.Texture(modelStorePath + \"cueball-white.jpg\", _self.scene);\r\n        _self.cueBallWhite.material = matCueBallWhite;\r\n\r\n        _self.cueBallYellow = BABYLON.Mesh.CreateSphere(\"sphere2\", 16, ballRadius, _self.scene);\r\n        _self.cueBallYellow.position.y = ballRadius;\r\n        _self.cueBallYellow.position.x = this.state.posCueBallYellow.x;\r\n        _self.cueBallYellow.position.z = this.state.posCueBallYellow.z;\r\n\r\n        var matCueBallYellow = new BABYLON.StandardMaterial(\"redMat\", _self.scene);\r\n        matCueBallYellow.diffuseTexture = new BABYLON.Texture(modelStorePath + \"cueball-yellow.jpg\", _self.scene);\r\n        _self.cueBallYellow.material = matCueBallYellow;\r\n\r\n        _self.targetBall = BABYLON.Mesh.CreateSphere(\"sphere3\", 16, ballRadius, _self.scene);\r\n        _self.targetBall.position.y = ballRadius;\r\n        _self.targetBall.position.x = this.state.posTargetBall.x;\r\n        _self.targetBall.position.z = this.state.posTargetBall.z;\r\n\r\n        var matTargetBall = new BABYLON.StandardMaterial(\"redMat\", _self.scene);\r\n        matTargetBall.diffuseTexture = new BABYLON.Texture(modelStorePath + \"targetBall.jpg\", _self.scene);\r\n        _self.targetBall.material = matTargetBall;\r\n    }\r\n\r\n    configGrids = () => {\r\n        const _self = this;\r\n        const grayRate = 0.7;\r\n        const color = [new BABYLON.Color4(grayRate,grayRate,grayRate,1), new BABYLON.Color4(grayRate,grayRate,grayRate,1)];\r\n        for (var i = 0; i < 15; i++) {\r\n            let myPoints = [\r\n                new BABYLON.Vector3(-TABLE_LENGTH*7/16 + i * TABLE_LENGTH/16, 5.5, -TABLE_LENGTH/4),\r\n                new BABYLON.Vector3(-TABLE_LENGTH*7/16 + i * TABLE_LENGTH/16, 5.5, TABLE_LENGTH/4)\r\n            ];\r\n            _self.grids.push(BABYLON.MeshBuilder.CreateLines(\"lines\", {points: myPoints, colors: color}, _self.scene));\r\n        }\r\n        for (i = 0; i < 7; i++) {\r\n            let myPoints = [\r\n                new BABYLON.Vector3(-TABLE_LENGTH/2, 5.5, -TABLE_LENGTH*3/16 + i * TABLE_LENGTH/16),\r\n                new BABYLON.Vector3(TABLE_LENGTH/2, 5.5, -TABLE_LENGTH*3/16 + i * TABLE_LENGTH/16)\r\n            ];\r\n            _self.grids.push(BABYLON.MeshBuilder.CreateLines(\"lines\", {points: myPoints, colors: color}, _self.scene));\r\n        }\r\n    }\r\n\r\n    toggleGrids = (visible) => {\r\n        const {grids} = this;\r\n        for (var i = 0; i < grids.length; i++) {\r\n            grids[i].visibility = visible;\r\n        }\r\n    }\r\n\r\n    loadModels = () => {\r\n        const _self = this;\r\n        const { modelStorePath } = this.props;\r\n\r\n        BABYLON.SceneLoader.ImportMesh(\"\", modelStorePath, fileTableModel, _self.scene, function (newMeshes) {\r\n            _self.table = newMeshes;\r\n            for(var obj of newMeshes){\r\n                if(obj.name === 'carpet'){\r\n                    // assign bump\r\n                    obj.material.bumpTexture = new BABYLON.Texture(modelStorePath+'carpet-bump.png', _self.scene);\r\n                    // end assign bump\r\n                }\r\n            }\r\n        });\r\n\r\n        BABYLON.SceneLoader.ImportMesh(\"\", modelStorePath, fileBatModel, _self.scene, function (newMeshes) {\r\n            _self.bat = newMeshes[0];\r\n            _self.bat.position.y = 50;\r\n            _self.bat.position.z = 90;\r\n            _self.updateBat();\r\n            \r\n        });\r\n    }\r\n\r\n    configPhysicsEngine = () => {\r\n        let { scene, cueBallWhite, cueBallYellow, targetBall, table } = this;\r\n        let {size} = this.props;\r\n        let gravity = TABLE_LENGTH * 9.8 / size;\r\n        scene.enablePhysics(new BABYLON.Vector3(0, -gravity, 0));\r\n        \r\n        // add physics engine for cue balls\r\n        cueBallWhite.physicsImpostor = new BABYLON.PhysicsImpostor(\r\n                                                cueBallWhite,\r\n                                                BABYLON.PhysicsImpostor.SphereImpostor,\r\n                                                {\r\n                                                    mass: ballMass,\r\n                                                    friction: ballFriction,\r\n                                                    restitution: ballRestitution\r\n                                                },\r\n                                                scene\r\n                                            );\r\n\r\n        cueBallYellow.physicsImpostor = new BABYLON.PhysicsImpostor(\r\n                                                cueBallYellow,\r\n                                                BABYLON.PhysicsImpostor.SphereImpostor,\r\n                                                {\r\n                                                    mass: ballMass,\r\n                                                    friction: ballFriction,\r\n                                                    restitution: ballRestitution\r\n                                                },\r\n                                                scene\r\n                                            );\r\n\r\n        targetBall.physicsImpostor = new BABYLON.PhysicsImpostor(\r\n                                                targetBall,\r\n                                                BABYLON.PhysicsImpostor.SphereImpostor,\r\n                                                {\r\n                                                    mass: ballMass,\r\n                                                    friction: ballFriction,\r\n                                                    restitution: ballRestitution\r\n                                                },\r\n                                                scene\r\n                                            );\r\n        // end add physics engine for cue balls\r\n\r\n        // add physics engine for bat\r\n        // bat.physicsImpostor = new BABYLON.PhysicsImpostor(\r\n        //                                 bat,\r\n        //                                 BABYLON.PhysicsImpostor.MeshImpostor,\r\n        //                                 {\r\n        //                                     mass: 0,\r\n        //                                     restitution: 0.9\r\n        //                                 },\r\n        //                                 scene\r\n        //                             );\r\n        // end add physics engine for bat\r\n\r\n        // add physics engine for carpet\r\n        for (var obj of table){\r\n            if (obj.name === 'carpet') {\r\n                obj.physicsImpostor = new BABYLON.PhysicsImpostor(\r\n                                                obj,\r\n                                                BABYLON.PhysicsImpostor.BoxImpostor,\r\n                                                {\r\n                                                    mass: 0,\r\n                                                    friction: carpetFriction,\r\n                                                    restitution: carpetRestitution\r\n                                                },\r\n                                                scene\r\n                                            );\r\n            } else if (obj.name === 'carpet-side') {\r\n                obj.physicsImpostor = new BABYLON.PhysicsImpostor(\r\n                                                obj,\r\n                                                BABYLON.PhysicsImpostor.MeshImpostor,\r\n                                                {\r\n                                                    mass: 0,\r\n                                                    friction: carpetFriction,\r\n                                                    restitution: carpetSideRestitution\r\n                                                },\r\n                                                scene\r\n                                            );\r\n            }\r\n        }\r\n        // end add physics engine for carpet\r\n    }\r\n\r\n    registerBallPath = () => {\r\n        var {\r\n            posPathCueWhite, cueBallWhite,\r\n            posPathCueYellow, cueBallYellow,\r\n            posPathTargetBall, targetBall\r\n        } = this;\r\n        \r\n        // cue white ball\r\n        var posWhiteBall = cueBallWhite.position;\r\n        if (posPathCueWhite.length === 0) {\r\n            posPathCueWhite.push(posWhiteBall)\r\n        } else {\r\n            let prevPos = posPathCueWhite[posPathCueWhite.length - 1];\r\n            let delta = Math.sqrt(\r\n                        Math.pow(prevPos.x - posWhiteBall.x, 2) +\r\n                        Math.pow(prevPos.y - posWhiteBall.y, 2) + \r\n                        Math.pow(prevPos.z - posWhiteBall.z, 2)\r\n                    );\r\n            if (delta > maxDelta) posPathCueWhite.push(posWhiteBall);\r\n        }\r\n        // end cue white ball\r\n\r\n        // cue yellow ball\r\n        var posYellowBall = cueBallYellow.position;\r\n        if (posPathCueYellow.length === 0) {\r\n            posPathCueYellow.push(posYellowBall)\r\n        } else {\r\n            let prevPos = posPathCueYellow[posPathCueYellow.length - 1];\r\n            let delta = Math.sqrt(\r\n                        Math.pow(prevPos.x - posWhiteBall.x, 2) +\r\n                        Math.pow(prevPos.y - posWhiteBall.y, 2) + \r\n                        Math.pow(prevPos.z - posWhiteBall.z, 2)\r\n                    );\r\n            if (delta > maxDelta) posPathCueYellow.push(posYellowBall);\r\n        }\r\n        // end cue yellow ball\r\n\r\n        // cue Target ball\r\n        var posTargetBall = targetBall.position;\r\n        if (posPathTargetBall.length === 0) {\r\n            posPathTargetBall.push(posTargetBall)\r\n        } else {\r\n            let prevPos = posPathTargetBall[posPathTargetBall.length - 1];\r\n            let delta = Math.sqrt(\r\n                        Math.pow(prevPos.x - posTargetBall.x, 2) +\r\n                        Math.pow(prevPos.y - posTargetBall.y, 2) + \r\n                        Math.pow(prevPos.z - posTargetBall.z, 2)\r\n                    );\r\n            if (delta > maxDelta) posPathTargetBall.push(posTargetBall);\r\n        }\r\n        // end cue Target ball\r\n    }\r\n\r\n    drawBallPath = (value) => {\r\n        const _self = this;\r\n        _self.setState({showPath: value});\r\n        let {\r\n            posPathCueWhite, pathCueWhite,\r\n            posPathCueYellow, pathCueYellow,\r\n            posPathTargetBall, pathTargetBall\r\n        } = this;\r\n        \r\n        var yellowColors = [];\r\n        var redColors = [];\r\n\r\n        for (var i in posPathCueYellow){\r\n            yellowColors.push(new BABYLON.Color4(1, 1, 0, 1));\r\n        }\r\n        for (var i in posPathTargetBall) {\r\n            redColors.push(new BABYLON.Color4(1, 0, 0, 1));\r\n        }\r\n\r\n        if (value === true) {\r\n            pathCueWhite.push(BABYLON.MeshBuilder.CreateLines(\"lines\", {points: posPathCueWhite}, _self.scene));\r\n            pathCueYellow.push(BABYLON.MeshBuilder.CreateLines(\"lines\", {points: posPathCueYellow, colors: yellowColors}, _self.scene));\r\n            pathTargetBall.push(BABYLON.MeshBuilder.CreateLines(\"lines\", {points: posPathTargetBall, colors: redColors}, _self.scene));\r\n            // console.log('pathes', posPathCueWhite)\r\n        } else {\r\n            for(var obj of pathCueWhite) {\r\n                obj.dispose();\r\n            }\r\n            for(obj of pathCueYellow) {\r\n                obj.dispose();\r\n            }\r\n            for(obj of pathTargetBall) {\r\n                obj.dispose();\r\n            }\r\n            pathCueWhite = [];\r\n            pathCueYellow = [];\r\n            pathTargetBall = [];\r\n        }\r\n    }\r\n\r\n    onSceneMount = ( e ) => {\r\n        const { canvas, scene } = e;\r\n        const _self = this;\r\n\r\n        _self.scene = scene;\r\n        _self.canvas = canvas;\r\n\r\n        scene.clearColor = new BABYLON.Color3(0.05, 0.05, 0.05);\r\n\r\n        this.configCameras();\r\n        this.configCueBalls();\r\n        this.loadModels();\r\n        this.configGrids();\r\n        setTimeout(() => {\r\n            _self.configPhysicsEngine();\r\n        }, 1000);\r\n\r\n        new BABYLON.HemisphericLight('light', BABYLON.Vector3.Up(), scene);\r\n        this.changeView(this.props.currentView)\r\n        // config shadow\r\n        // end config shadow\r\n        scene.getEngine().runRenderLoop(() => {\r\n            if (scene) {\r\n                scene.render();\r\n                _self.registerBallPath();\r\n            }\r\n        });\r\n\r\n        setTimeout(() => {\r\n            _self.drawBallPath();\r\n        }, 10000);\r\n    }\r\n\r\n    changeView (view) {\r\n        const _self = this;\r\n        \r\n        if (view === '2d') {\r\n            _self.scene.activeCamera = _self.topCam;\r\n            _self.arcCam.detachControl(_self.canvas);\r\n            _self.topCam.attachControl(_self.canvas);\r\n        } else {\r\n            _self.scene.activeCamera = _self.arcCam;\r\n            _self.arcCam.attachControl(_self.canvas);\r\n            _self.topCam.detachControl(_self.canvas);\r\n        }\r\n    }\r\n\r\n    playSimulation = () => {\r\n        console.log(this.state)\r\n        let { cueBallWhite } = this;\r\n        let {\r\n            speed,\r\n            cueLine,\r\n            cueAngle,\r\n        } = this.state;\r\n\r\n        let {size} = this.props;\r\n        console.log(cueLine, speed, size);\r\n        let unit = 400 / (size * 100);\r\n        let velocity = unit * speed;\r\n\r\n        cueBallWhite.physicsImpostor.setAngularVelocity(new BABYLON.Quaternion(10, 0, 20, 0));\r\n        cueBallWhite.physicsImpostor.setLinearVelocity(\r\n            new BABYLON.Vector3(\r\n                -velocity * Math.cos(cueLine * Math.PI / 180) * Math.cos(cueAngle * Math.PI / 180),\r\n                -velocity * Math.sin(cueAngle * Math.PI / 180),\r\n                -velocity * Math.sin(cueLine * Math.PI / 180) * Math.cos(cueAngle * Math.PI / 180)\r\n            )\r\n        );\r\n    }\r\n\r\n    updateBat = () => {\r\n        const {\r\n            cueLine,\r\n            cueAngle,\r\n            sideEnglish,\r\n            topSpin,\r\n            posCueBallWhite\r\n        } = this.state;\r\n        let {bat} = this;\r\n        bat.position.x = posCueBallWhite.x;\r\n        bat.position.z = posCueBallWhite.z;\r\n        bat.position.y = ballRadius/2 + 5;\r\n        bat.rotation = new BABYLON.Vector3(\r\n            0,\r\n            -(Math.PI * cueLine / 180),\r\n            Math.PI/2 + (Math.PI * cueAngle / 180)\r\n        );\r\n    }\r\n\r\n    updateControlOptions = (data) => {\r\n        // console.log(data)\r\n        this.setState(data);\r\n        this.updateBat();\r\n    }\r\n    render () {\r\n        return (\r\n            <Engine canvasId=\"carom-simulator-canvas\">\r\n                <Scene\r\n                    onMeshPicked={this.meshPicked}\r\n                    onSceneMount={this.onSceneMount}\r\n                />\r\n            </Engine>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SimulatorEngine;","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faMinus, faPlus } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport './slider.css';\r\n\r\nexport default class InputSlider extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            value: this.props.value?this.props.value:0\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps = (props) => {\r\n        const {value} = props;\r\n        this.setState({value:value});\r\n    }\r\n\r\n    updateValue = (value) => {\r\n        this.setState({value:value})\r\n        this.props.onUpdate(this.props.itemKey, value);\r\n    }\r\n\r\n    onChangeValue = (evt) => {\r\n        const value = evt.target.value;\r\n        this.updateValue(value);\r\n    }\r\n\r\n    onMinusPressed = () => {\r\n        var currentValue = this.state.value;\r\n        let { min, step } = this.props;\r\n        if (step === undefined) step = 0.1;\r\n        step *= 10;\r\n        currentValue = (currentValue*10 - step)/10;\r\n        if (currentValue <  min) currentValue = min;\r\n        this.updateValue(currentValue);\r\n    }\r\n\r\n    onPlusPressed = () => {\r\n        var currentValue = this.state.value;\r\n        let { max, step } = this.props;\r\n        if (step === undefined) step = 0.1;\r\n        step *= 10;\r\n        currentValue = (currentValue*10 + step)/10;\r\n        if (currentValue > max) currentValue = max;\r\n        this.updateValue(currentValue);\r\n    }\r\n\r\n    render () {\r\n        const {\r\n            value,\r\n        } = this.state;\r\n\r\n        let {\r\n            containerClass,\r\n            label,\r\n            min,\r\n            max,\r\n            unitDom,\r\n            step\r\n        } = this.props\r\n        if (step === undefined) step = 0.1;\r\n        return (\r\n            <div className={containerClass}>\r\n                <div style={{display:'flex'}}>\r\n                    <FontAwesomeIcon\r\n                        icon={faMinus}\r\n                        className=\"btn-change-value\"\r\n                        onClick={this.onMinusPressed}\r\n                    />\r\n                    <span style={{flex:1, textAlign:'center'}}>\r\n                        {label}\r\n                        <span> : {value}{unitDom}</span>\r\n                    </span>\r\n                    <FontAwesomeIcon\r\n                        icon={faPlus}\r\n                        className=\"btn-change-value\"\r\n                        onClick={this.onPlusPressed}\r\n                    />\r\n                </div>\r\n                <input\r\n                    type=\"range\"\r\n                    min={min}\r\n                    max={max}\r\n                    value={value}\r\n                    className=\"slider\"\r\n                    step={step}\r\n                    onChange={this.onChangeValue}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n    faTh,\r\n    faCrosshairs,\r\n    faVolumeMute,\r\n    faBackward,\r\n    faForward,\r\n    faStop,\r\n    faPlay\r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport InputSlider from './slider';\r\nimport './style.css';\r\n\r\nexport default class ControllerCollection extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            cueLine: this.props.cueLine,\r\n            cueAngle: this.props.cueAngle,\r\n            sideEnglish: this.props.sideEnglish,\r\n            topSpin: this.props.topSpin,\r\n            speed: this.props.speed\r\n        }\r\n    }\r\n\r\n    onInputSliderUpdated = (key, value) => {\r\n        let tmp = Object.assign({}, this.state);\r\n        tmp[key] = parseFloat(value);\r\n        this.setState(tmp);\r\n        this.props.onControlOptionsUpdated(tmp);\r\n    }\r\n\r\n    render () {\r\n        const {cueLine, cueAngle, sideEnglish, topSpin, speed} = this.state;\r\n        const {showGrid, showPath} = this.props;\r\n        var btnGridClass = \"toggle-btn\";\r\n        var btnShowPathClass = \"toggle-btn\";\r\n        var btnMuteClass = \"toggle-btn\";\r\n\r\n        if (showGrid === true) btnGridClass += \" active\";\r\n        if (showPath === true) btnShowPathClass += \" active\";\r\n        return (\r\n            <div>\r\n                <div className=\"common-controller-container\">\r\n                    <FontAwesomeIcon\r\n                        className={btnGridClass}\r\n                        icon={faTh}\r\n                        onClick={() => {this.props.onToggleShowGrid(!showGrid)}}\r\n                    />\r\n\r\n                    <FontAwesomeIcon\r\n                        className={btnShowPathClass}\r\n                        icon={faCrosshairs}\r\n                        onClick={() => {this.props.onToggleShowPath(!showPath)}}\r\n                    />\r\n\r\n                    <FontAwesomeIcon\r\n                        className={btnMuteClass}\r\n                        icon={faVolumeMute}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <InputSlider\r\n                        label=\"Cue Line\"\r\n                        containerClass=\"slider-container\"\r\n                        min={-180}\r\n                        max={180}\r\n                        value={cueLine}\r\n                        unitDom={<sup>o</sup>}\r\n                        itemKey=\"cueLine\"\r\n                        onUpdate={this.onInputSliderUpdated}\r\n                    />\r\n                    <InputSlider\r\n                        label=\"Cue Angle\"\r\n                        containerClass=\"slider-container\"\r\n                        min={2}\r\n                        max={89}\r\n                        value={cueAngle}\r\n                        unitDom={<sup>o</sup>}\r\n                        itemKey=\"cueAngle\"\r\n                        onUpdate={this.onInputSliderUpdated}\r\n                    />\r\n                    <InputSlider\r\n                        label=\"Side English\"\r\n                        containerClass=\"slider-container\"\r\n                        min={-10.1}\r\n                        max={10.1}\r\n                        value={sideEnglish}\r\n                        unitDom={<span>mm</span>}\r\n                        itemKey=\"sideEnglish\"\r\n                        onUpdate={this.onInputSliderUpdated}\r\n                    />\r\n                    <InputSlider\r\n                        label=\"Top Spin\"\r\n                        containerClass=\"slider-container\"\r\n                        min={-11.1}\r\n                        max={11.1}\r\n                        value={topSpin}\r\n                        unitDom={<span>mm</span>}\r\n                        itemKey=\"topSpin\"\r\n                        onUpdate={this.onInputSliderUpdated}\r\n                    />\r\n                    <InputSlider\r\n                        label=\"Speed\"\r\n                        containerClass=\"slider-container\"\r\n                        min={0}\r\n                        max={450}\r\n                        value={speed}\r\n                        step={1}\r\n                        unitDom={<span>cm/s</span>}\r\n                        itemKey=\"speed\"\r\n                        onUpdate={this.onInputSliderUpdated}\r\n                    />\r\n                </div>\r\n                <div className=\"play-controller-container\">\r\n                    <FontAwesomeIcon\r\n                        className=\"play-controller\"\r\n                        icon={faBackward}\r\n                    />\r\n                    <FontAwesomeIcon\r\n                        className=\"play-controller\"\r\n                        icon={faStop}\r\n                    />\r\n                    <FontAwesomeIcon\r\n                        className=\"play-controller\"\r\n                        icon={faPlay}\r\n                        onClick={this.props.onPlayPressed}\r\n                    />\r\n                    <FontAwesomeIcon\r\n                        className=\"play-controller\"\r\n                        icon={faForward}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nimport ViewSelector from './viewSelector';\r\nimport SimulatorEngine from './simulatorEngine';\r\nimport ControllerCollection from './controller';\r\n\r\nimport './styles.css';\r\n\r\nimport {\r\n    INDEX_SIZE,\r\n    INDEX_WHITE_X,\r\n    INDEX_WHITE_Y,\r\n    INDEX_YELLOW_X,\r\n    INDEX_YELLOW_Y,\r\n    INDEX_TARGET_X,\r\n    INDEX_TARGET_Y,\r\n    INDEX_CUELINE,\r\n    INDEX_CUEANGLE,\r\n    INDEX_SIDEENGLISH,\r\n    INDEX_TOPSPIN,\r\n    INDEX_SPEED\r\n} from './constants';\r\n\r\nimport { from } from 'rxjs';\r\n\r\nclass CaromSimulator extends React.Component {\r\n    constructor () {\r\n        super();\r\n\r\n        this.state = {\r\n            currentView : '2d',\r\n            showGrid : true,\r\n            showPath: false,\r\n            size: 310,\r\n            cueLine: 30,\r\n            cueAngle: 5,\r\n            sideEnglish: -8.7,\r\n            topSpin: 7.5,\r\n            speed: 380,\r\n            posCueBallWhite: {},\r\n            posCueBallYellow: {},\r\n            posTargetBall: {}\r\n        }\r\n        this.simulator = React.createRef();\r\n    }\r\n    componentWillMount = () => {\r\n        this.updateSimulateInfo();\r\n    }\r\n    updateSimulateInfo = () => {\r\n        var info = [\r\n            'Michael Cacoulidis',\r\n            '...',\r\n            '0',\r\n            '310',\r\n            '2',\r\n            '1',\r\n            '0.7426666666666665',\r\n            '0.11',\r\n            '0.5791666666666665',\r\n            '0.6425',\r\n            '0.6038333333333333',\r\n            '0.22600000000000003',\r\n            '2.846666666666669',\r\n            '0.03490658503988659',\r\n            '5.468558116924995',\r\n            '-0.011250000000000001',\r\n            '-0.009549999999999954'\r\n        ]\r\n        let size = Math.sqrt(Math.pow(parseInt(info[INDEX_SIZE]), 2) / 5) / 50;\r\n\r\n        let cueLine = info[INDEX_CUELINE] / Math.PI * 180;\r\n        if (cueLine > 180) cueLine -= 360;\r\n        cueLine = Math.round(cueLine * 10) / 10;\r\n\r\n        let cueAngle = info[INDEX_CUEANGLE] / Math.PI * 180;\r\n        cueAngle = Math.round(cueAngle * 10) / 10;\r\n\r\n        let sideEnglish = parseFloat(info[INDEX_SIDEENGLISH]) * 1000;\r\n        sideEnglish = Math.round(sideEnglish * 10) / 10;\r\n\r\n        let topSpin = parseFloat(info[INDEX_TOPSPIN]) * 1000;\r\n        topSpin = Math.round(topSpin * 10) / 10;\r\n\r\n        let speed = parseFloat(info[INDEX_SPEED]) * 100;\r\n        speed = Math.round(speed);\r\n\r\n        let posCueBallWhite = {\r\n            x: parseFloat(info[INDEX_WHITE_X]),\r\n            z: parseFloat(info[INDEX_WHITE_Y])\r\n        }\r\n\r\n        let posCueBallYellow = {\r\n            x: parseFloat(info[INDEX_YELLOW_X]),\r\n            z: parseFloat(info[INDEX_YELLOW_Y])\r\n        }\r\n\r\n        let posTargetBall = {\r\n            x: parseFloat(info[INDEX_TARGET_X]),\r\n            z: parseFloat(info[INDEX_TARGET_Y])\r\n        }\r\n        let tmp = {\r\n            size: size,\r\n            cueLine: cueLine,\r\n            cueAngle: cueAngle,\r\n            sideEnglish: sideEnglish,\r\n            topSpin: topSpin,\r\n            speed: speed,\r\n            posCueBallWhite: posCueBallWhite,\r\n            posCueBallYellow: posCueBallYellow,\r\n            posTargetBall: posTargetBall\r\n        }\r\n\r\n        this.setState(tmp)\r\n        console.log(this.state)\r\n    }\r\n\r\n    viewSelectorItemClicked = (item) => {\r\n        this.setState({currentView: item});\r\n        this.simulator.current.changeView(item);\r\n    }\r\n\r\n    onToggleShowGrid = (value) => {\r\n        this.setState({showGrid: value})\r\n        this.simulator.current.toggleGrids(value);\r\n    }\r\n\r\n    onToggleShowPath = (value) => {\r\n        this.setState({showPath: value})\r\n        this.simulator.current.drawBallPath(value);\r\n    }\r\n\r\n    onPlayPressed = () => {\r\n        this.simulator.current.playSimulation();\r\n    }\r\n\r\n    onControlOptionsUpdated = (data) => {\r\n        this.simulator.current.updateControlOptions(data);\r\n    }\r\n\r\n    render () {\r\n        const {\r\n            currentView,\r\n\r\n            showGrid,\r\n            showPath,\r\n\r\n            size,\r\n            cueLine,\r\n            cueAngle,\r\n            sideEnglish,\r\n            topSpin,\r\n            speed,\r\n\r\n            posCueBallWhite,\r\n            posCueBallYellow,\r\n            posTargetBall,\r\n        } = this.state;\r\n        return (\r\n            <div className=\"simulator-container\">\r\n                <ViewSelector\r\n                    currentView={currentView}\r\n                    viewSelectorItemClicked={this.viewSelectorItemClicked}\r\n                />\r\n                <SimulatorEngine\r\n                    modelStorePath={this.props.modelStorePath}\r\n                    ref={this.simulator}\r\n\r\n                    size={size}\r\n                    currentView={currentView}\r\n                    cueLine = {cueLine}\r\n                    cueAngle = {cueAngle}\r\n                    sideEnglish = {sideEnglish}\r\n                    topSpin = {topSpin}\r\n                    speed = {speed}\r\n\r\n                    posCueBallWhite = {posCueBallWhite}\r\n                    posCueBallYellow = {posCueBallYellow}\r\n                    posTargetBall = {posTargetBall}\r\n                />\r\n                <ControllerCollection\r\n                    showGrid={showGrid}\r\n                    showPath={showPath}\r\n                    cueLine = {cueLine}\r\n                    cueAngle = {cueAngle}\r\n                    sideEnglish = {sideEnglish}\r\n                    topSpin = {topSpin}\r\n                    speed = {speed}\r\n\r\n                    onControlOptionsUpdated={this.onControlOptionsUpdated}\r\n\r\n                    onToggleShowGrid={this.onToggleShowGrid}\r\n                    onToggleShowPath = {this.onToggleShowPath}\r\n                    onPlayPressed = {this.onPlayPressed}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CaromSimulator;","import React from 'react';\nimport './App.css';\n\nimport { CaromSimulator } from './lib/kozoom-3d-simulator';\n\nfunction App() {\n  return (\n    <div className=\"simulator-container\">\n      <CaromSimulator\n        modelStorePath=\"./models/\"\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}